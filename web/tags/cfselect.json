{"HISTORY":"<!-- --><br>ColdFusion 8:<br><li><p>Added support for binding in HTML format forms, including the <samp class=\"codeph\">bind<\/samp>, <samp class=\"codeph\">bindAttribute<\/samp>, and <samp class=\"codeph\">bindOnLoad<\/samp>, and <samp class=\"codeph\">onBindError<\/samp> attributes.<\/p> <\/li> \n<li><p>Added support for tool tips in HTML format forms, including the <samp class=\"codeph\">sourceForTooltip<\/samp> attribute.<\/p> <\/li><br>ColdFusion MX 7:<br><li><p>When populating a <samp class=\"codeph\">cfselect<\/samp> tag with a query when the database field has spaces instead of a value, the error processing of the <samp class=\"codeph\">cfform<\/samp> tag required field is not triggered as it was in ColdFusion MX 6.1.<\/p> <\/li> \n<li><p>Added support for specifying multiple values to the <samp class=\"codeph\">selected<\/samp> attribute.<\/p> <\/li> \n<li><p>Deprecated the <samp class=\"codeph\">passthrough<\/samp> attribute. The tag now supports all HTML <samp class=\"codeph\">select<\/samp> tag attributes directly.<\/p> <\/li> \n<li><p>Added <samp class=\"codeph\">on<\/samp>-prefixed attributes.<\/p> <\/li> \n<li><p>Added <samp class=\"codeph\">enabled<\/samp>, <samp class=\"codeph\">group<\/samp>, <samp class=\"codeph\">height<\/samp>, <samp class=\"codeph\">label<\/samp>, <samp class=\"codeph\">queryPosition<\/samp>, <samp class=\"codeph\">tooltip<\/samp>, <samp class=\"codeph\">visible<\/samp>, and <samp class=\"codeph\">width<\/samp> attributes.<\/p> <\/li><br>","SYNTAX":"<!-- --><br>&lt;cfselect  \r\n    <strong>name=&quot;<\/strong><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">name<\/i><strong>&quot; <\/strong>    bind=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">bind expression<\/i>&quot; \r\n    bindAttribute=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">attribute name<\/i>&quot; \r\n    bindOnLoad=&quot;yes|no&quot; \r\n    <strong>display=&quot;<\/strong><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">text<\/i><strong>&quot; <\/strong>    editable=&quot;yes|no&quot; \r\n    enabled=&quot;yes|no&quot; \r\n    <strong>group=&quot;<\/strong><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">query column name<\/i><strong>&quot; <\/strong>    height=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">number of pixels<\/i>&quot; \r\n    id=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">HTML id<\/i>&quot; \r\n    <strong>label=&quot;<\/strong><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">label<\/i><strong>&quot; <\/strong>    message=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">text<\/i><strong>&quot; <\/strong>    multiple=&quot;yes|no&quot; \r\n    onBindError=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript function name<\/i>&quot; \r\n    onChange=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript or ActionScript<\/i>&quot; \r\n    onClick=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript function name<\/i>&quot; \r\n    onError=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript<\/i>&quot; \r\n    onKeyDown=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript or ActionScript<\/i>&quot; \r\n    onKeyUp=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript or ActionScript<\/i>&quot; \r\n    onMouseDown=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript or ActionScript<\/i>&quot; \r\n    onMouseUp=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript or ActionScript<\/i>&quot; \r\n    <strong>query=&quot;<\/strong><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">query name<\/i><strong>&quot; <\/strong>    queryPosition=&quot;above|below&quot; \r\n    required=&quot;yes|no&quot; \r\n    <strong>selected=&quot;<\/strong><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">value or list<\/i><strong>&quot; <\/strong>    size=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">integer<\/i><strong>&quot; <\/strong>    sourceForTooltip=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">URL<\/i>&quot; \r\n    <strong>style=&quot;<\/strong><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">style specification<\/i><strong>&quot; <\/strong>    tooltip=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">text<\/i>&quot; \r\n    <strong>value=&quot;<\/strong><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">text<\/i><strong>&quot; <\/strong>    visible=&quot;yes|no&quot; \r\n    width=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">number of pixels<\/i>&quot;&gt; \r\n \r\n<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">zero or more HTML option tags<\/i><br><samp class=\"codeph\">&lt;\/cfselect&gt;<\/samp><br>Some attributes apply to only specific display formats. For details see the Attributes table.<br><span class=\"notetitle\">Note: <\/span>You can specify this tag’s attributes in an \n<samp class=\"codeph\">attributeCollection<\/samp> attribute whose value is a structure. Specify the structure name in the \n<samp class=\"codeph\">attributeCollection<\/samp> attribute and use the tag’s attribute names as structure keys.<br>","CATEGORY":"Forms tags","PAGENAME":"cfselect","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7afc.html\">cfapplet<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7afb.html\">cfcalendar<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fb7.html\">cfform<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7a48.html\">cfformgroup<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7ad4.html\">cfformitem<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7baf.html\">cfgrid<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f51.html\">cfinput<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7aed.html\">cfslider<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7afd.html\">cftextarea<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7d84.html\">cftree<\/a><\/samp>; <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7ffe.html\" target=\"_self\">Introduction to Retrieving and Formatting Data<\/a> and <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7a01.html\" target=\"_self\">Using Ajax User Interface Components and Features<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Constructs a drop-down list box form control. Used in a cfform tag. You can populate the list from a query, or by using the HTML option tag.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>Example 1: Without data binding<br>The following example lets you select one or more employee names from a list of all employees, grouped by departments, and displays the selected names and the employee’s e-mail addresses. It includes an option to get data for all employees.<br><strong>&lt;!--- Get the employee names from the database. ---&gt;<\/strong> \r\n<strong>&lt;!--- Use SQL to create a Name field with first and last names. ---&gt;<\/strong> \r\n<strong>&lt;cfquery name = &quot;GetAllEmployees&quot; dataSource = &quot;cfdocexamples&quot;<\/strong> \r\n        <strong>cachedwithin=&quot;#createTimeSpan(0,1,0,0)#&quot;&gt;<\/strong> \r\n    <strong>SELECT Emp_ID, EMail, Phone, Department, FirstName, LastName, <\/strong> \r\n        <strong>FirstName ||' '<\/strong> \r\n        <strong>||lastName as Name<\/strong> \r\n    <strong>FROM Employees <\/strong> \r\n    <strong>GROUP BY Department, Emp_ID, EMail, Phone, FirstName, LastName, FirstName<\/strong> \r\n<strong>&lt;\/cfquery&gt;<\/strong> \r\n \r\n<strong>&lt;h2&gt;cfselect Example&lt;\/h2&gt;<\/strong> \r\n<strong>&lt;!-- The cfif statement is true if the form was submitted.<\/strong> \r\n    <strong>Show the selected names. ---&gt;<\/strong> \r\n<strong>&lt;cfif IsDefined(&quot;form.employeeid&quot;)&gt;<\/strong> \r\n    <strong>&lt;!--- The form was submitted. ---&gt;<\/strong> \r\n    <strong>&lt;h3&gt;You Selected the following employees&lt;\/h3&gt;<\/strong> \r\n    <strong>&lt;cfif form.employeeid IS &quot;&quot;&gt;<\/strong> \r\n        <strong>&lt;!--- Select All option was selected. Show all employees. ---&gt;<\/strong> \r\n        <strong>&lt;cfoutput query=&quot;GetAllEmployees&quot;&gt;<\/strong> \r\n            <strong>#name#&lt;br&gt;<\/strong> \r\n            <strong>Email: #email#&lt;br&gt;&lt;br&gt;<\/strong> \r\n        <strong>&lt;\/cfoutput&gt;<\/strong> \r\n    <strong>&lt;cfelse&gt;<\/strong> \r\n        <strong>&lt;!--- <\/strong> \r\n            <strong>Use a query of queries to get the data for the selected users. <\/strong> \r\n            <strong>Form.employeeid is a comma-delimited list of selected employee IDs. <\/strong> \r\n        <strong>---&gt;<\/strong> \r\n        <strong>&lt;cfquery name = &quot;GetSelectedEmployees&quot; dbtype=&quot;query&quot;&gt;<\/strong> \r\n            <strong>SELECT Emp_ID, EMail, Phone, Department, FirstName, LastName,<\/strong> \r\n                <strong>FirstName<\/strong> \r\n                <strong>||' ' ||lastName as Name<\/strong> \r\n            <strong>FROM GetAllEmployees<\/strong> \r\n            <strong>WHERE Emp_ID in (#form.employeeid#)<\/strong> \r\n        <strong>&lt;\/cfquery&gt;<\/strong>     \r\n        <strong>&lt;!--- Display the names and e-mail addresses from the query. ---&gt;<\/strong> \r\n        <strong>&lt;cfoutput query=&quot;GetSelectedEmployees&quot;&gt;<\/strong> \r\n            <strong>#firstName# #lastName#&lt;br&gt;<\/strong> \r\n            <strong>Email: #email#&lt;br&gt;<\/strong> \r\n            <strong>&lt;br&gt;<\/strong> \r\n        <strong>&lt;\/cfoutput&gt;<\/strong> \r\n    <strong>&lt;\/cfif&gt; <\/strong> \r\n<strong>&lt;\/cfif&gt;<\/strong> \r\n \r\n<strong>&lt;!--- The cfform tag posts back to the current page. ---&gt;<\/strong> \r\n<strong>&lt;h3&gt;Select one or more employees&lt;\/h3&gt;<\/strong> \r\n<strong>&lt;cfform action = &quot;#CGI.SCRIPT_NAME#&quot;&gt;<\/strong> \r\n    <strong>&lt;!--- <\/strong> \r\n            <strong>Use cfselect to present the query's LastName column, <\/strong> \r\n            <strong>grouped by department. <\/strong> \r\n            <strong>Allow Multiple selections.<\/strong> \r\n        <strong>---&gt;<\/strong> \r\n    <strong>&lt;cfselect <\/strong> \r\n        <strong>name = &quot;employeeid&quot; <\/strong> \r\n        <strong>size = &quot;15&quot; <\/strong> \r\n        <strong>multiple=&quot;yes&quot; <\/strong> \r\n        <strong>required = &quot;Yes&quot;<\/strong> \r\n        <strong>message = &quot;Select one or more employee names&quot; <\/strong> \r\n        <strong>query = &quot;GetAllEmployees&quot; <\/strong> \r\n        <strong>group=&quot;Department&quot;<\/strong> \r\n        <strong>display =&quot;name&quot; <\/strong> \r\n        <strong>value =&quot;emp_id&quot; <\/strong> \r\n        <strong>queryPosition=&quot;Below&quot;&gt;<\/strong> \r\n        <strong>&lt;!--- Add an option to select all employees. ---&gt;<\/strong> \r\n        <strong>&lt;option value = &quot;&quot;&gt;Select All&lt;\/option&gt;<\/strong> \r\n    <strong>&lt;\/cfselect&gt;&lt;br&gt;&lt;br&gt;<\/strong> \r\n    <strong>&lt;input type=&quot;Submit&quot;&gt;<\/strong> \r\n&lt;\/cfform&gt;<br>Example 2: With data binding<br>The following example uses binding to fill in the options list of the Cities control only after the user selects a state. (In this example, only two states, California and New Jersey, have city entries.)<br>The CFML page is the simplest part of the example. It consists of the following lines:<br>&lt;html&gt; \r\n&lt;head&gt; \r\n&lt;\/head&gt; \r\n&lt;body&gt; \r\n&lt;cfform name=&quot;mycfform&quot;&gt; \r\n    &lt;!---  \r\n        The States selector.  \r\n        The bindonload attribute is required to fill the selector.  \r\n    ---&gt; \r\n    &lt;cfselect name=&quot;state&quot; bind=&quot;cfc:bindFcns.getstates()&quot; bindonload=&quot;true&quot;&gt; \r\n        &lt;option name=&quot;0&quot;&gt;--state--&lt;\/option&gt; \r\n    &lt;\/cfselect&gt; \r\n    &lt;cfselect name=&quot;city&quot; bind=&quot;cfc:bindFcns.getcities({state})&quot;&gt; \r\n        &lt;option name=&quot;0&quot;&gt;--city--&lt;\/option&gt; \r\n    &lt;\/cfselect&gt; \r\n&lt;\/cfform&gt; \r\n&lt;\/body&gt; \r\n&lt;\/html&gt;<br>The BinFcns CFC has three functions: <samp class=\"codeph\">getstates<\/samp>, to get the states; <samp class=\"codeph\">getcities<\/samp>, to get the cities; and an internal <samp class=\"codeph\">getXmlData<\/samp> function that parses an XML file to get the state and city information. The following examples shows the CFC:<br>&lt;cfcomponent&gt; \r\n    &lt;cffunction name=&quot;getXmlData&quot; output=&quot;true&quot;&gt; \r\n        &lt;cfset var xmlData = &quot;&quot;&gt;  \r\n        &lt;cffile action=&quot;read&quot; file=&quot;#expandpath('.')#\\states.xml&quot; \r\n            variable=&quot;xmlData&quot;&gt; \r\n        &lt;cfset xmlData = XmlParse(xmlData)&gt; \r\n        &lt;cfreturn xmlData&gt; \r\n    &lt;\/cffunction&gt;     \r\n \r\n    &lt;cffunction name=&quot;getstates&quot; access=&quot;remote&quot;&gt; \r\n        &lt;cfset state = arraynew(2)&gt; \r\n        &lt;cfset xmlData = getXmlData()&gt; \r\n        &lt;cfset numStates = 0&gt; \r\n        &lt;cfset state[1][1] = &quot;0&quot;&gt; \r\n        &lt;cfset state[1][2] = &quot;--state--&quot;&gt; \r\n        &lt;cfset numStates = ArrayLen(xmlData.states.XmlChildren)&gt; \r\n        &lt;cfloop from=&quot;1&quot; to=&quot;#numStates#&quot; index=&quot;j&quot;&gt; \r\n            &lt;cfset state[j+1][1] =  \r\n                ltrim(xmlData.states.state[j].XmlAttributes.abr)&gt; \r\n            &lt;cfset state[j+1][2] = ltrim(xmlData.states.state[j].name.xmlText)&gt; \r\n        &lt;\/cfloop&gt; \r\n        &lt;cfreturn state&gt; \r\n    &lt;\/cffunction&gt; \r\n \r\n    &lt;cffunction name=&quot;getcities&quot; access=&quot;remote&quot;&gt; \r\n        &lt;cfargument name=&quot;state&quot; required=&quot;yes&quot;&gt; \r\n        &lt;cfset var city = arraynew(2)&gt; \r\n        &lt;cfset var xmlData = getXmlData()&gt; \r\n        &lt;cfset var numStates = 0&gt; \r\n        &lt;cfset var numCities = 0&gt; \r\n&lt;cflog text=&quot;In getcities&quot;&gt; \r\n        &lt;cfset city[1][1] = &quot;0&quot;&gt; \r\n        &lt;cfset city[1][2] = &quot;--city--&quot;&gt; \r\n        &lt;cftry&gt; \r\n            &lt;cfset numStates = ArrayLen(xmlData.states.XmlChildren)&gt; \r\n            &lt;cfloop from=&quot;1&quot; to=&quot;#numStates#&quot; index=&quot;j&quot;&gt; \r\n                &lt;cfif xmlData.states.state[j].XmlAttributes.abr eq state&gt; \r\n                    &lt;cfset numCities = \r\n                        ArrayLen(xmlData.states.state[j].cities.XmlChildren)&gt; \r\n                    &lt;cfloop from=&quot;1&quot; to=&quot;#numCities#&quot; index=&quot;k&quot;&gt; \r\n                        &lt;cfset city[k+1][1] =     ltrim(xmlData.states.state[j].cities.city[k].XmlAttributes.name)&gt; \r\n                        &lt;cfset city[k+1][2] = ltrim(xmlData.states.state[j].cities.city[k].XmlAttributes.name)&gt; \r\n                    &lt;\/cfloop&gt; \r\n                    &lt;cfbreak&gt; \r\n                &lt;\/cfif&gt; \r\n            &lt;\/cfloop&gt; \r\n        &lt;cfcatch type=&quot;any&quot;&gt; \r\n            &lt;!--- Do nothing. ---&gt; \r\n        &lt;\/cfcatch&gt; \r\n        &lt;\/cftry&gt;  \r\n        &lt;cfreturn city&gt; \r\n    &lt;\/cffunction&gt; \r\n     \r\n&lt;\/cfcomponent&gt;<br>The states.xml file has the following code. To keep the code short, only two states have cities, and only four states are listed.<br>&lt;states&gt; \r\n    &lt;state abr=&quot;NJ&quot;&gt; \r\n        &lt;name&gt;New Jersey&lt;\/name&gt; \r\n        &lt;cities&gt; \r\n            &lt;city name=&quot;Edison&quot; \/&gt; \r\n            &lt;city name=&quot;Rahway&quot; \/&gt; \r\n            &lt;city name=&quot;Atlantic City&quot; \/&gt; \r\n            &lt;city name=&quot;Hoboken&quot; \/&gt; \r\n            &lt;city name=&quot;Jersey City&quot; \/&gt; \r\n            &lt;city name=&quot;Newark&quot; \/&gt; \r\n            &lt;city name=&quot;Trenton&quot; \/&gt; \r\n            &lt;city name=&quot;Union City&quot; \/&gt; \r\n        &lt;\/cities&gt; \r\n    &lt;\/state&gt; \r\n    &lt;state abr=&quot;CA&quot;&gt; \r\n        &lt;name&gt;California&lt;\/name&gt; \r\n        &lt;cities&gt; \r\n            &lt;city name=&quot;Anaheim&quot; \/&gt; \r\n            &lt;city name=&quot;Beverly Hills&quot; \/&gt; \r\n            &lt;city name=&quot;Elk Grove&quot; \/&gt; \r\n            &lt;city name=&quot;Fairfield&quot; \/&gt; \r\n            &lt;city name=&quot;Fremont&quot; \/&gt; \r\n            &lt;city name=&quot;Indian Wells&quot; \/&gt; \r\n            &lt;city name=&quot;Long Beach&quot; \/&gt; \r\n        &lt;\/cities&gt; \r\n    &lt;\/state&gt; \r\n    &lt;state abr=&quot;ME&quot;&gt; \r\n        &lt;name&gt;Maine&lt;\/name&gt; \r\n    &lt;\/state&gt; \r\n    &lt;state abr=&quot;MA&quot;&gt; \r\n        &lt;name&gt;Massachusetts&lt;\/name&gt; \r\n    &lt;\/state&gt; \r\n&lt;\/states&gt;<br>","USAGE":"<!-- --><br>For this tag to work properly. the browser must have JavaScript enabled.<br>This tag requires an end tag and can include HTML <samp class=\"codeph\">option<\/samp> and <samp class=\"codeph\">optgroup<\/samp> child tags.<br>To ensure that a selected list box item persists across postbacks, use the <samp class=\"codeph\">cfform<\/samp> tag <samp class=\"codeph\">preserveData<\/samp> attribute with a list generated from a query. (This strategy works only with data that is populated from a query.)<br>If the <samp class=\"codeph\">cfform preserveData<\/samp> attribute is <samp class=\"codeph\">yes<\/samp> and the form posts back to the same page, and if the control is populated by a query, the posted selections for the <samp class=\"codeph\">cfselect<\/samp> control are used instead of the <samp class=\"codeph\">Selected<\/samp> attribute. For controls that are populated with regular HTML <samp class=\"codeph\">option<\/samp> tags, the developer must dynamically add the <samp class=\"codeph\">Selected<\/samp> attribute to the appropriate option tags.<br>The <samp class=\"codeph\">group<\/samp> option generates a query by using SQL GROUP BY syntax and places the <samp class=\"codeph\">value<\/samp> column entries from each group in an indented list under the <samp class=\"codeph\">group<\/samp> column’s field value. This option generates an HTML <samp class=\"codeph\">optgroup<\/samp> tag for each entry in the <samp class=\"codeph\">group<\/samp> column.<br>Close each HTML <samp class=\"codeph\">option<\/samp> tag in the <samp class=\"codeph\">cfselect<\/samp> tag body with a <samp class=\"codeph\">&lt;\/option&gt;<\/samp> end tag. If you do not do so, and you specify <samp class=\"codeph\">queryPosition=&quot;below&quot;<\/samp>, the first item from the query might not appear in the list.<br>The <samp class=\"codeph\">bind<\/samp> attribute lets you set <samp class=\"codeph\">cfselect<\/samp> attributes dynamically. Often, it is used to dynamically create the options list based on values that the user enters in the form. For example, you can use the <samp class=\"codeph\">bind<\/samp> attribute to create a Cities option list based on the user’s selection from a States <samp class=\"codeph\">cfselect<\/samp> control.<br>When you use a <samp class=\"codeph\">bind<\/samp> attribute to populate the selection list, the function or URL that returns the selection values must return one of the following:<br><li><p>A two-dimensional array, where the first element in each array row is the option value and the second element in the row is the text to display in the option list.<\/p> <\/li> \n<li><p>If the bind specifies a CFC function, a query, or, if the bind specifies a URL, a JSON representation of a query. The query must include columns whose names are the values of the <samp class=\"codeph\">cfselect<\/samp> tag <samp class=\"codeph\">value<\/samp> and <samp class=\"codeph\">display<\/samp> attributes. Although you can return additional columns, you cannot use them in your client-side code. When you call a CFC function, you do not have to convert the query to JSON format yourself; ColdFusion automatically does the conversion.<\/p> <p>To use this format, specify a <samp class=\"codeph\">value<\/samp> attribute. If you omit the <samp class=\"codeph\">display<\/samp> attribute, you must have only a single column in the query that contains the values; the values are also used as the displayed text.<\/p> <\/li><br>For detailed information on binding, see <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7a0a.html\" target=\"_self\">Binding data to form fields<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i>.<br>For more information, see the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fb7.html\">cfform<\/a><\/samp> tag entry.<br>","Attribute":[{"REQOROPT":"Required; All","DESCRIPTION":"Name of the select form element.","default":" ","Attribute":"name"},{"REQOROPT":"Optional; HTML","DESCRIPTION":"A bind expression that dynamically sets an attribute of the control. For details, see Usage.","default":" ","Attribute":"bind"},{"REQOROPT":"Optional; HTML","DESCRIPTION":"Specifies the HTML tag attribute whose value is set by the bind attribute. You can only specify attributes in the browser’s HTML DOM tree, not ColdFusion-specific attributes. Ignored if there is no bind attribute.","default":"Populate the options","Attribute":"bindAttribute"},{"REQOROPT":"Optional; HTML","DESCRIPTION":"A Boolean value that specifies whether to execute the bind attribute expression when first loading the form. Ignored if there is no bind attribute.","default":false,"Attribute":"bindOnLoad"},{"REQOROPT":"Optional; All","DESCRIPTION":"Query column to use for the display label of each list element. Used with the query attribute.","default":"Value of value attribute","Attribute":"display"},{"REQOROPT":"Optional; Flash","DESCRIPTION":"Boolean value specifying whether you can edit the contents of the control.","default":false,"Attribute":"editable"},{"REQOROPT":"Optional; Flash","DESCRIPTION":"Boolean value specifying whether the control is enabled. A disabled control appears in light gray. The inverse of the disabled attribute.","default":true,"Attribute":"enabled"},{"REQOROPT":"Optional; HTML and XML","DESCRIPTION":"Query column to use to group the items in the drop-down list into a two-level hierarchical list.","default":" ","Attribute":"group"},{"REQOROPT":"Optional; Flash","DESCRIPTION":"The height of the control, in pixels.","default":" ","Attribute":"height"},{"REQOROPT":"Optional; HTML","DESCRIPTION":"The HTML ID of the control.","default":"Value of name attribute","Attribute":"id"},{"REQOROPT":"Optional; Flash and XML","DESCRIPTION":"Label to put next to the control on a Flash or XML-format form.","default":" ","Attribute":"label"},{"REQOROPT":"Optional; All","DESCRIPTION":"Message to display if required=\"yes\" and no selection is made.","default":" ","Attribute":"message"},{"REQOROPT":"Optional; All","DESCRIPTION":"yes: allows selecting multiple elements in drop-down list. no","default":false,"Attribute":"multiple"},{"REQOROPT":"Optional; HTML","DESCRIPTION":"The name of a JavaScript function to execute if evaluating a bind expression results in an error. The function must take two attributes: an HTTP status code and a message. (The status code is ‑1 if the error is not an HTTP error.) If you omit this attribute, and specified a global error handler (by using the ColdFusion.setGlobalErrorHandler function), it displays the error message; otherwise a default error pop-up appears.","default":"See Description","Attribute":"onBindError"},{"REQOROPT":"Optional; All","DESCRIPTION":"JavaScript (HTML\/XML) or ActionScript (Flash) to run when the control changes due to user action.","default":" ","Attribute":"onChange"},{"REQOROPT":"Optional; HTML and XML","DESCRIPTION":"JavaScript to run when the user clicks the control.","default":" ","Attribute":"onClick"},{"REQOROPT":"Optional; HTML and XML","DESCRIPTION":"Custom JavaScript function to execute if validation fails.","default":" ","Attribute":"onError"},{"REQOROPT":"Optional; All","DESCRIPTION":"JavaScript (HTML\/XML) or ActionScript (Flash) to run when the user presses a keyboard key in the control.","default":" ","Attribute":"onKeyDown"},{"REQOROPT":"Optional; All","DESCRIPTION":"JavaScript (HTML\/XML) or ActionScript (Flash) to run when the user releases a keyboard key in the control.","default":" ","Attribute":"onKeyUp"},{"REQOROPT":"Optional; All","DESCRIPTION":"JavaScript (HTML\/XML) or ActionScript (Flash) to run when the user releases a mouse button in the control.","default":" ","Attribute":"onMouseDown"},{"REQOROPT":"Optional; All","DESCRIPTION":"JavaScript (HTML\/XML) or ActionScript (Flash) to run when the user presses a mouse button in the control.","default":" ","Attribute":"onMouseUp"},{"REQOROPT":"Optional; All","DESCRIPTION":"Name of query to populate drop-down list.","default":" ","Attribute":"query"},{"REQOROPT":"Optional; All","DESCRIPTION":"If you populate the options list with a query and use HTML option child tags to specify additional entries, this attribute determines the location of the items from the query relative to the items from the option tags: above: puts the query items above the options items. below: puts the query items below the options items.","default":"above","Attribute":"queryPosition"},{"REQOROPT":"Optional; All","DESCRIPTION":"Note: This attribute has no effect if you omit the size attribute or set it to 1, because the browser always submits the displayed item. You can work around this issue: format forms by having an initial option tag with value=\" \" (notice the space character between the quotation marks). This workaround applies only for Flash forms and not for HTML forms or XML forms. yes: a list element must be selected when the form is submitted. no","default":false,"Attribute":"required"},{"REQOROPT":"Optional; All","DESCRIPTION":"One or more option values to preselect in the selection list. To specify multiple values, use a comma-delimited list. This attribute applies only if selection list items are generated from a query. The cfform tag preserveData attribute can override this value.","default":" ","Attribute":"selected"},{"REQOROPT":"Optional; All","DESCRIPTION":"Number of entries to display at one time. The default value displays a drop-down list. Any other value displays a list box with size number of entries visible at one time.","default":1,"Attribute":"size"},{"REQOROPT":"Optional; HTML","DESCRIPTION":"The URL of a page to display as a tool tip. The page can include CFML and HTML markup to control the tip contents and format, and the tip can include images. If you specify this attribute, an animated icon appears with the text \"Loading...\" while the tip is being loaded.","default":" ","Attribute":"sourceForTooltip"},{"REQOROPT":"Optional; All","DESCRIPTION":"In HTML or XML format forms, ColdFusion passes the style attribute to the browser or XML. In Flash format, must be a style specification in CSS format, with the same syntax and contents as used in Flex for the corresponding Flash element.","default":" ","Attribute":"style"},{"REQOROPT":"Optional; Flash, HTML","DESCRIPTION":"Text to display when the mouse pointer hovers over the control. The text can include HTML markup. Ignored if you specify a sourceForTooltip attribute.","default":" ","Attribute":"tooltip"},{"REQOROPT":"Optional; All","DESCRIPTION":"Query column to use for the value of each list element. Used with the query attribute.","default":" ","Attribute":"value"},{"REQOROPT":"Optional; Flash","DESCRIPTION":"Boolean value that specifies whether to show the control. The display reserves empty space for an invisible control.","default":true,"Attribute":"visible"},{"REQOROPT":"Optional; Flash","DESCRIPTION":"The width of the control, in pixels.","default":" ","Attribute":"width"}]}