{"HISTORY":"<!-- --><br>ColdFusion 8: Added this tag<br>","SYNTAX":"<!-- --><br>&lt;cfajaxproxy \r\n    cfc = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">CFC name<\/i>&quot; \r\n    jsclassname = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript proxy class name<\/i>&quot;&gt; \r\nOR \r\n \r\n&lt;cfajaxproxy \r\n    bind = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">bind expression<\/i>&quot; \r\n    onError = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript function name<\/i>&quot; \r\n    onSuccess = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript function name<\/i>&quot;&gt;<br><span class=\"notetitle\">Note: <\/span>You can specify this tag’s attributes in an \n<samp class=\"codeph\">attributeCollection<\/samp> whose value is a structure. Specify the structure name in the \n<samp class=\"codeph\">attributeCollection<\/samp> and use the tag’s attribute names as structure keys.<br>","CATEGORY":"Internet protocol tags","PAGENAME":"cfajaxproxy","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-79e4.html\">DeserializeJSON<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-79e3.html\">IsJSON<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-79fa.html\">SerializeJSON<\/a><\/samp>, <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7a27.html\" target=\"_self\">Using Ajax Data and Development Features<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Creates a JavaScript proxy for a ColdFusion component, for use in an AJAX client. Alternatively, creates a proxy for a single CFC method, JavaScript function, or URL that is bound to one or more control attribute values.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>The following example uses a remote CFC method to populate a drop-down list of employees. When you select a name from the list, it uses a call to the CFC method to get information about the employee, and displays the results.<br>The application page has the following lines:<br>&lt;!--- The cfajaxproxy tag creates a client-side proxy for the emp CFC. \r\n        View the generated page source to see the resulting JavaScript.  \r\n        The emp CFC is in the components subdirectory of the directory that \r\n        contains this page. ---&gt; \r\n&lt;cfajaxproxy cfc=&quot;components.emp&quot; jsclassname=&quot;emp&quot;&gt; \r\n \r\n&lt;html&gt; \r\n    &lt;head&gt; \r\n        &lt;script type=&quot;text\/javascript&quot;&gt; \r\n         \r\n            \/\/ Function to find the index in an array of the first entry  \r\n            \/\/ with a specific value. \r\n            \/\/ It is used to get the index of a column in the column list. \r\n            Array.prototype.findIdx = function(value){ \r\n                for (var i=0; i &lt; this.length; i++) { \r\n                    if (this[i] == value) { \r\n                        return i; \r\n                    } \r\n                } \r\n            } \r\n \r\n            \/\/ Use an asynchronous call to get the employees for the  \r\n            \/\/ drop-down employee list from the ColdFusion server. \r\n            var getEmployees = function(){ \r\n                \/\/ create an instance of the proxy.  \r\n                var e = new emp(); \r\n                \/\/ Setting a callback handler for the proxy automatically makes \r\n                \/\/ the proxy's calls asynchronous. \r\n                e.setCallbackHandler(populateEmployees); \r\n                e.setErrorHandler(myErrorHandler); \r\n            \/\/ The proxy getEmployees function represents the CFC \r\n            \/\/ getEmployees function. \r\n                e.getEmployees(); \r\n            } \r\n             \r\n            \/\/ Callback function to handle the results returned by the \r\n            \/\/ getEmployees function and populate the drop-down list. \r\n            var populateEmployees = function(res) \r\n            { \r\n                with(document.simpleAJAX){ \r\n                    var option = new Option(); \r\n                    option.text='Select Employee'; \r\n                    option.value='0'; \r\n                    employee.options[0] = option; \r\n                    for(i=0;i&lt;res.DATA.length;i++){ \r\n                        var option = new Option(); \r\n                        option.text=res.DATA[i][res.COLUMNS.findIdx('FIRSTNAME')] \r\n                            + ' ' + res.DATA[i][[res.COLUMNS.findIdx('LASTNAME')]]; \r\n                        option.value=res.DATA[i][res.COLUMNS.findIdx('EMP_ID')]; \r\n                        employee.options[i+1] = option; \r\n                    } \r\n                }     \r\n            } \r\n \r\n            \/\/ Use an asynchronous call to get the employee details. \r\n            \/\/ The function is called when the user selects an employee. \r\n            var getEmployeeDetails = function(id){ \r\n                var e = new emp(); \r\n                e.setCallbackHandler(populateEmployeeDetails); \r\n                e.setErrorHandler(myErrorHandler); \r\n            \/\/ This time, pass the employee name to the getEmployees CFC \r\n            \/\/ function. \r\n                e.getEmployees(id); \r\n            } \r\n            \/\/ Callback function to display the results of the getEmployeeDetails \r\n            \/\/ function. \r\n            var populateEmployeeDetails = function(employee) \r\n            { \r\n                var eId = employee.DATA[0][0]; \r\n                var efname = employee.DATA[0][1]; \r\n                var elname = employee.DATA[0][2]; \r\n                var eemail = employee.DATA[0][3]; \r\n                var ephone = employee.DATA[0][4]; \r\n                var edepartment = employee.DATA[0][5]; \r\n \r\n                with(document.simpleAJAX){ \r\n                    empData.innerHTML =  \r\n                    '&lt;span style=&quot;width:100px&quot;&gt;Employee Id:&lt;\/span&gt;'  \r\n                    + '&lt;font color=&quot;green&quot;&gt;&lt;span align=&quot;left&quot;&gt;'  \r\n                    + eId + '&lt;\/font&gt;&lt;\/span&gt;&lt;br&gt;'  \r\n                    + '&lt;span style=&quot;width:100px&quot;&gt;First Name:&lt;\/span&gt;'  \r\n                    + '&lt;font color=&quot;green&quot;&gt;&lt;span align=&quot;left&quot;&gt;'  \r\n                    + efname + '&lt;\/font&gt;&lt;\/span&gt;&lt;br&gt;'  \r\n                    + '&lt;span style=&quot;width:100px&quot;&gt;Last Name:&lt;\/span&gt;'  \r\n                    + '&lt;font color=&quot;green&quot;&gt;&lt;span align=&quot;left&quot;&gt;'      \r\n                    + elname + '&lt;\/font&gt;&lt;\/span&gt;&lt;br&gt;'  \r\n                    + '&lt;span style=&quot;width:100px&quot;&gt;Email:&lt;\/span&gt;' \r\n                    + '&lt;font color=&quot;green&quot;&gt;&lt;span align=&quot;left&quot;&gt;'  \r\n                    + eemail + '&lt;\/span&gt;&lt;\/font&gt;&lt;br&gt;'  \r\n                    + '&lt;span style=&quot;width:100px&quot;&gt;Phone:&lt;\/span&gt;'  \r\n                    + '&lt;font color=&quot;green&quot;&gt;&lt;span align=&quot;left&quot;&gt;'  \r\n                    + ephone + '&lt;\/font&gt;&lt;\/span&gt;&lt;br&gt;'  \r\n                    + '&lt;span style=&quot;width:100px&quot;&gt;Department:&lt;\/span&gt;'  \r\n                    + '&lt;font color=&quot;green&quot;&gt;&lt;span align=&quot;left&quot;&gt;'  \r\n                    + edepartment + '&lt;\/font&gt;&lt;\/span&gt;'; \r\n                } \r\n            } \r\n \r\n            \/\/ Error handler for the asynchronous functions. \r\n            var myErrorHandler = function(statusCode, statusMsg) \r\n            { \r\n                alert('Status: ' + statusCode + ', ' + statusMsg); \r\n            } \r\n             \r\n        &lt;\/script&gt; \r\n    &lt;\/head&gt; \r\n \r\n    &lt;body&gt; \r\n        &lt;!--- The form to display the employee drop-down list and  \r\n        employee data. ---&gt; \r\n        &lt;form name=&quot;simpleAJAX&quot; method=&quot;get&quot;&gt; \r\n        List of Employees:&amp;nbsp;&amp;nbsp;&amp;nbsp; \r\n        &lt;select name=&quot;employee&quot; onChange=&quot;getEmployeeDetails(this.value)&quot;&gt; \r\n            &lt;script language=&quot;javascript&quot;&gt; \r\n                getEmployees(); \r\n            &lt;\/script&gt; \r\n        &lt;\/select&gt; \r\n        &lt;br&gt;&lt;br&gt; \r\n        &lt;span id=&quot;empData&quot;&gt;&lt;\/span&gt; \r\n        &lt;\/form&gt;     \r\n    &lt;\/body&gt; \r\n&lt;\/html&gt;<br>The following component, which gets the data from the data source, must be in a file named emp.cfc in the components subdirectory of the application directory. The CFC uses the cfdocexamples data source that is installed with ColdFusion if you install the documentation.<br>&lt;cfcomponent&gt; \r\n    &lt;cfset this.dsn = &quot;cfdocexamples&quot;&gt; \r\n    &lt;cffunction name=&quot;getEmployees&quot; access=&quot;remote&quot; returnFormat=&quot;json&quot; \r\n            output=&quot;false&quot;&gt; \r\n        &lt;cfargument name=&quot;empid&quot; required=&quot;no&quot; type=&quot;string&quot; default=&quot;0&quot;&gt; \r\n        &lt;cfquery name=&quot;qryEmp&quot; datasource=&quot;#this.dsn#&quot;&gt; \r\n            select * from Employees  \r\n            &lt;cfif empid neq 0&gt; \r\n            where Emp_ID = #empid# \r\n            &lt;\/cfif&gt; \r\n        &lt;\/Cfquery&gt; \r\n        &lt;cfreturn qryEmp&gt; \r\n    &lt;\/cffunction&gt; \r\n&lt;\/cfcomponent&gt;<br>","USAGE":"<!-- --><br>Make sure that the Enable HTTP Status Codes option on the Server Settings &gt; Settings page of the ColdFusion Administrator is selected. Otherwise, the proxy cannot determine if an error occurs in invoking the CFC function and cannot call the error handler.<br>A <samp class=\"codeph\">cfajaxproxy<\/samp> tag with a <samp class=\"codeph\">bind<\/samp> attribute does not refresh any control that is not specified in the bind expression.<br>If you specify a URL in the <samp class=\"codeph\">bind<\/samp> attribute, the HTTP response must consist of a single JSON representation of an object, array, or simple value, corresponding to the onSuccess argument.<br>","Attribute":[{"REQOROPT":"A bind or cfc attribute is required","DESCRIPTION":"A bind expression that specifies a CFC method, JavaScript function, or URL to call. For detailed information about specifying bind expressions, see Binding data to form fields in the Developing ColdFusion Applications. You cannot use this attribute with the cfc attribute.","default":"","Attribute":"bind"},{"REQOROPT":"A bind or cfc attribute is required","DESCRIPTION":"The CFC for which to create a proxy. Specify a dot-delimited path to the CFC. The path can be an absolute filepath, or relative to location of the CFML page. For example, if the myCFC CFC is in the cfcs subdirectory of the ColdFusion page, specify cfcs.myCFC. If the CFC extends another CFC, the extended CFC methods are also available to the JavaScript proxy. On UNIX-based systems, the tag searches first for a file whose name or path corresponds to the specified name or path, but is in all lowercase. If it does not find it, ColdFusion then searches for a filename or path that corresponds to the attribute value exactly, with identical character casing. This attribute cannot be used with the bind attribute.","default":"","Attribute":"cfc"},{"REQOROPT":"Optional","DESCRIPTION":"The name to use for the JavaScript proxy class that represents the CFC. This attribute cannot be used with a bind attribute.","default":"The value of the cfc attribute","Attribute":"jsclassname"},{"REQOROPT":"Optional","DESCRIPTION":"The name of a JavaScript function to invoke when a bind, specified by the bind attribute fails. The function must take two arguments: an error code and an error message. This attribute cannot be used with a cfc attribute.","default":"","Attribute":"onError"},{"REQOROPT":"Optional","DESCRIPTION":"The name of a JavaScript function to invoke when a bind, specified by the bind attribute succeeds. The function must take one argument, the bind function return value. If the bind function is a CFC function, the return value is automatically converted to a JavaScript variable before being passed to the onSuccess function. This attribute cannot be used with a cfc attribute.","default":"","Attribute":"onSuccess"}]}