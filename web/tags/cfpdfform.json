{"HISTORY":"<!-- --><br>ColdFusion 8: Added this tag.<br>","SYNTAX":"<!-- --><br><strong>populate<\/strong> \r\n&lt;cfpdfform \r\n    <strong>required<\/strong> \r\n    action = &quot;populate&quot; \r\n    source = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">PDF file pathname<\/i>|<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">byte array<\/i>&quot; \r\n    <strong>optional<\/strong> \r\n    XMLdata = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">XML object|XML string|XML data filename|<\/i> \r\n        <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">URL that returns XML data<\/i>&quot; \r\n    destination = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">output file pathname<\/i>&quot; \r\n    overwrite = &quot;yes|no&quot;\/ \r\n    <strong>fdf = &quot;true|false&gt;<\/strong> &lt;!---New attribute that populates data in FDF format instead of      \r\n    XML with subforms and params---&gt; \r\n    <strong>fdfdata = &quot;file name to be imported&quot;<\/strong> &lt;!--- New attribute populates data in FDF format \r\n    from the AcroForm---&gt; \r\n<strong>read<\/strong> \r\n&lt;cfpdfform \r\n    <strong>required<\/strong> \r\n    action = &quot;read&quot; \r\n    source = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">pathname|byte array&quot;<\/i> \r\n        <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">at least one of the following:<\/i> \r\n    XMLdata = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">variable name for XML data<\/i>&quot; \r\n    result = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">structure containing form field values<\/i>&quot; \r\n    <strong>optional<\/strong> \r\n    overwrite = &quot;yes|no&quot;\/&gt; \r\n    fdfdata = &quot;filename to be exported to&quot;<br><span class=\"notetitle\">Note: <\/span>You can specify this tag’s attributes in an \n<samp class=\"codeph\">attributeCollection<\/samp> attribute whose value is a structure. Specify the structure name in the \n<samp class=\"codeph\">attributeCollection<\/samp> attribute and use the tag’s attribute names as structure keys.<br>","CATEGORY":"Forms tags","PAGENAME":"cfpdfform","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7c21.html\">cfdocument<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-791a.html\">cfdocumentsection<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fb7.html\">cfform<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f51.html\">cfinput<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7995.html\">cfpdf<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-76ea.html\">cfpdfformparam<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-763e.html\">cfpdfparam<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-76e8.html\">cfpdfsubform<\/a><\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7996.html\">cfprint<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-798a.html\">IsPDFFile<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7989.html\">IsPDFObject<\/a><\/samp>, <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-798c.html\" target=\"_self\">Manipulating PDF Forms in ColdFusion<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Manipulates existing forms created in Adobe® Acrobat® and Adobe® LiveCycle® Designer. The following list describes some of the tasks you can perform with the cfpdfform tag:","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>The following example shows how to embed an interactive PDF form in a PDF document created with the <samp class=\"codeph\">cfdocument<\/samp> tag:<br>&lt;!--- The following code extracts data from the cfdocexamples database based \r\n    on a username entered in a login form. ---&gt; \r\n&lt;cfquery name=&quot;getEmpInfo&quot; datasource=&quot;cfdocexamples&quot;&gt; \r\n    SELECT * FROM EMPLOYEES \r\n    WHERE EMAIL = &lt;cfqueryparam value=&quot;#form.username#&quot;&gt; \r\n&lt;\/cfquery&gt; \r\n \r\n&lt;!--- The following code creates a PDF document with headers  \r\n    and footers. ---&gt; \r\n&lt;cfdocument format=&quot;pdf&quot;&gt; \r\n    &lt;cfdocumentitem type=&quot;header&quot;&gt; \r\n    &lt;font size=&quot;-1&quot; align=&quot;center&quot;&gt;&lt;i&gt;Nondisclosure Agreement&lt;\/i&gt;&lt;\/font&gt; \r\n    &lt;\/cfdocumentitem&gt; \r\n    &lt;cfdocumentitem type=&quot;footer&quot;&gt; \r\n    &lt;font size=&quot;-1&quot;&gt;&lt;i&gt;Page &lt;cfoutput&gt;#cfdocument.currentpagenumber# of  \r\n        #cfdocument.totalpagecount#&lt;\/cfoutput&gt;&lt;\/i&gt;&lt;\/font&gt; \r\n    &lt;\/cfdocumentitem&gt; \r\n     \r\n&lt;!--- The following code creates the first section in the PDF document. ---&gt; \r\n    &lt;cfdocumentsection&gt; \r\n    &lt;h3&gt;Employee Nondisclosure Agreement&lt;\/h3&gt; \r\n    &lt;p&gt;Please verify the information in the enclosed form. Make any of the \r\n    necessary changes in the online form and click the &lt;b&gt;Print&lt;\/b&gt; button. \r\n    Sign and date the last page. Staple the pages together and return the \r\n    completed form to your manager.&lt;\/p&gt; \r\n    &lt;\/cfdocumentsection&gt; \r\n     \r\n&lt;!--- The following code embeds an interactive PDF form within the PDF \r\n    document with fields populated by the database query. The cfpdpfform tag \r\n    automatically creates a section in the PDF document. Do not embed the \r\n    cfpdfform within cfdocumentsection tags. ---&gt; \r\n \r\n    <strong>&lt;cfpdfform action=&quot;populate&quot; source=&quot;c:\\forms\\embed.pdf&quot;&gt;<\/strong> \r\n        <strong>&lt;cfpdfsubform name=&quot;form1&quot;&gt;<\/strong> \r\n            <strong>&lt;cfpdfformparam name=&quot;txtEmpName&quot; value=&quot;#getEmpInfo.FIRSTNAME#<\/strong> \r\n                <strong>#getEmpInfo.LASTNAME#&quot;&gt;<\/strong> \r\n            <strong>&lt;cfpdfformparam name=&quot;txtDeptName&quot; value=&quot;#getEmpInfo.DEPARTMENT#&quot;&gt;<\/strong> \r\n            <strong>&lt;cfpdfformparam name=&quot;txtEmail&quot; value=&quot;#getEmpInfo.IM_ID#&quot;&gt;<\/strong> \r\n            <strong>&lt;cfpdfformparam name=&quot;txtPhoneNum&quot; value=&quot;#getEmpInfo.PHONE#&quot;&gt;<\/strong> \r\n            <strong>&lt;cfpdfformparam name=&quot;txtManagerName&quot; value=&quot;Randy Nielsen&quot;&gt;<\/strong> \r\n        <strong>&lt;\/cfpdfsubform&gt;<\/strong> \r\n    <strong>&lt;\/cfpdfform&gt;<\/strong> \r\n \r\n&lt;!--- The following code creates the last document section. Page numbering \r\n    resumes in this section. ---&gt; \r\n    &lt;cfdocumentsection&gt; \r\n    &lt;p&gt;I, &lt;cfoutput&gt;#getEmpInfo.FIRSTNAME# #getEmpInfo.LASTNAME#&lt;\/cfoutput&gt;, \r\n        hereby attest that the information in this document is accurate and complete.&lt;\/p&gt; \r\n    &lt;br\/&gt;&lt;br\/&gt; \r\n    &lt;table border=&quot;0&quot; cellpadding=&quot;20&quot;&gt; \r\n    &lt;tr&gt;&lt;td width=&quot;300&quot;&gt; \r\n    &lt;hr \/&gt; \r\n    &lt;p&gt;&lt;i&gt;Signature&lt;\/i&gt;&lt;\/p&gt;&lt;\/td&gt; \r\n    &lt;td width=&quot;150&quot;&gt;&lt;hr \/&gt; \r\n    &lt;p&gt;&lt;i&gt;Today's Date&lt;\/i&gt;&lt;\/p&gt;&lt;\/td&gt;&lt;\/tr&gt; \r\n    &lt;\/cfdocumentsection&gt; \r\n&lt;\/cfdocument&gt;<br>","USAGE":"<!-- --><br>ColdFusion supports two types of interactive forms: forms created in Adobe Acrobat 6.0 or earlier, and forms created in Adobe LiveCycle. In Adobe Acrobat Professional and Standard 7.0, Adobe introduced Adobe&reg; LiveCycle&reg; Designer for creating PDF forms. ColdFusion supports forms created in LiveCycle Designer 7.0 and later.<br>Forms created in Acrobat have a flat structure: a list of fields at the same level. Forms created in LiveCycle Designer are hierarchical, often composed of nested subforms. To map the data to the form field, you use <samp class=\"codeph\">cfpdfsubform<\/samp> tags to recreate the structure of the form in ColdFusion. For examples, see the Usage section of the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-76e8.html\">cfpdfsubform<\/a><\/samp> tag, and “ <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-798c.html\" target=\"_self\">Manipulating PDF Forms in ColdFusion<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i>.<br><dt class=\"dlterm\">\n populate action\n<\/dt> \n<dd xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">\n Use the \n <samp class=\"codeph\">populate<\/samp> action to populate PDF form fields from the specified data file. You can specify a destination to write the output to a file or write the populated form directly to the browser. To display the interactive PDF form in the browser, do not specify a destination.\n <p>The following example shows how to populate a PDF form with an XML data file and display the completed form in a browser:<\/p> \n <pre>&lt;cfpdfform source=&quot;c:\\payslipTemplate.pdf&quot; action=&quot;populate&quot; XMLdata=&quot;c:\\formdata.xml&quot;\/&gt;<\/pre> \n <p>This example shows how to populate a PDF form with an XML data file and write the completed form to a new PDF file:<\/p> \n <pre>&lt;!--- Specify an XML file to populate a PDF form. ---&gt; \r\n&lt;cfpdfform source=&quot;c:\\payslipTemplate.pdf&quot; \r\n    destination=&quot;c:\\employeeid123.pdf&quot; action=&quot;populate&quot; \r\n    XMLdata=&quot;c:\\formdata.xml&quot;\/&gt;<\/pre> \n <p>Also, you can specify a URL that returns XML data. In the following example, <samp class=\"codeph\">&quot;http:\/\/test1.com\/xyz&quot;<\/samp> returns XML content:<\/p> \n <pre>&lt;cfpdfform source= &quot;#sourcefile#&quot; action=&quot;populate&quot; XMLdata= \r\n    &quot;http:\/\/test1.com\/xyz&quot; destination=&quot;#resultfile#&quot; overwrite=&quot;true&quot;\/&gt;<\/pre> \n <p>For forms created in Acrobat, you can write the output to a PDF file only. For forms created in LiveCycle, you have the option to write the output to an XML Data Package (XDP) file. An XDP file is an XML representation of a PDF file.<\/p> \n <div class=\"note\">\n  <span class=\"notetitle\">Note: <\/span>Supplied values in form fields created in Acrobat or LiveCycle Designer are case sensitive. For example, if a check box in a form requires a “Yes” value, the value “yes” does not populate that field.\n <\/div> \n <p>The file extension determines the file format: to save the output in XDP format, use an XDP extension in the destination filename:<\/p> \n <pre>&lt;!--- Specify a an XML file to populate a PDF form. ---&gt; \r\n&lt;cfpdfform source=&quot;c:\\payslipTemplate.pdf&quot; \r\n    destination=&quot;c:\\employeeid123.xdp&quot; action=&quot;populate&quot; \r\n    XMLdata=&quot;c:\\formdata.xml&quot;\/&gt;<\/pre> \n <p>You can use one or more <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-76ea.html\">cfpdfformparam<\/a><\/samp> tags within a <samp class=\"codeph\">cfpdfform<\/samp> tag to populate individual fields in a PDF form.<\/p> \n <p>The following example shows how to populate an existing form created in Acrobat (payslipTemplate.pdf) and create a PDF form (employeeid123.pdf) with the employeeID and salary fields filled in:<\/p> \n <pre>&lt;!--- This example shows how to populate two fields in a form created in Acrobat. ---&gt; \r\n&lt;cfpdfform source=&quot;c:\\payslipTemplate.pdf&quot; \r\n    destination=&quot;c:\\employeeid123.pdf&quot; action=&quot;populate&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;employeeId&quot; value=&quot;123&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;salary&quot; value=&quot;$85,000&quot;&gt; \r\n&lt;\/cfpdfform&gt;<\/pre> \n <p>ColdFusion requires that you reproduce the exact structure of the source PDF form to populate fields. To verify the structure of a PDF form in ColdFusion, use the <samp class=\"codeph\">read<\/samp> action of <samp class=\"codeph\">cfpdfform<\/samp> tag, and then use the <samp class=\"codeph\">cfdump<\/samp> tag to display the result structure. Use a <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-76e8.html\">cfpdfsubform<\/a><\/samp> tag for each level within the structure. For more information, see <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-798c.html\" target=\"_self\">Manipulating PDF Forms in ColdFusion<\/a> in the <i>Developing ColdFusion Applications<\/i>.<\/p> \n <p>The following example shows how to populate a form created in LiveCycle. Many forms created from templates in LiveCycle contain a subform called form1. Use the <samp class=\"codeph\">cfpdfsubform<\/samp> tag to create a subform in ColdFusion.<\/p> \n <pre>&lt;!--- This example shows how to populate two fields in a LiveCycle form.  \r\n    ---&gt; \r\n&lt;cfpdfform source=&quot;c:\\payslipTemplate.pdf&quot;  \r\n    destination=&quot;c:\\employeeid123.pdf&quot; action=&quot;populate&quot;&gt; \r\n    &lt;cfpdfsubform name=&quot;form1&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;employeeId&quot; value=&quot;123&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;salary&quot; value=&quot;$85,000&quot;&gt; \r\n    &lt;\/cfpdfsubform&gt; \r\n&lt;\/cfpdfform&gt;<\/pre> \n <p>You can now import files in FDF format using the <samp class=\"codeph\">populate<\/samp> action. The following example shows how:<\/p> \n <pre>&lt;cfpdfform source= &quot;write_acrroform.pdf&quot; action=&quot;populate&quot; fdfdata=&quot;abc.fdf&quot; destination=&quot;hello.pdf&quot;&gt; \r\n&lt;\/cfpdfform&gt;<\/pre> \n <p>If the <samp class=\"codeph\">fdf<\/samp> attribute for the populate action is set to <samp class=\"codeph\">true<\/samp>, it allows you to populate data in FDF format with subforms and params instead of XML, as shown in the following example:<\/p> \n <pre>&lt;cfpdfform source=&quot;acroform2.pdf&quot; destination=&quot;source_result17.pdf&quot; action=&quot;populate&quot; overwrite=&quot;true&quot; fdf=&quot;true&quot;&gt; \r\n&lt;cfpdfsubform name=&quot;Text1&quot;&gt; \r\n        &lt;cfpdfsubform name=&quot;0&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;0&quot; value=&quot;Test1.0.0&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;1&quot; value=&quot;Test1.0.1&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;2&quot; value=&quot;Test1.0.2&quot;&gt; \r\n&lt;\/cfpdfsubform&gt; \r\n&lt;cfpdfsubform name=&quot;1&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;0&quot; value=&quot;Test1.1.0&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;1&quot; value=&quot;Test1.1.1&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;2&quot; value=&quot;Test1.1.2&quot;&gt; \r\n    &lt;\/cfpdfsubform&gt; \r\n&lt;\/cfpdfsubform&gt; \r\n \r\n&lt;cfpdfsubform name=&quot;Text2&quot;&gt; \r\n    &lt;cfpdfformparam name=&quot;0&quot; value=&quot;Test2.0&quot;&gt; \r\n        &lt;cfpdfformparam name=&quot;1&quot; value=&quot;Test2.1&quot;&gt; \r\n            &lt;cfpdfformparam name=&quot;2&quot; value=&quot;Test2.2&quot;&gt; \r\n            &lt;cfpdfformparam name=&quot;3&quot; value=&quot;Test2.3&quot;&gt; \r\n        &lt;\/cfpdfsubform&gt; \r\n&lt;cfpdfformparam name=&quot;Text3&quot; value=&quot;Test3&quot;&gt; \r\n&lt;cfpdfformparam name=&quot;Text4&quot; value=&quot;Test4&quot;&gt; \r\n&lt;cfpdfformparam name=&quot;checkbox1&quot; value=&quot;Yes&quot;&gt; \r\n&lt;cfpdfformparam name=&quot;listbox1&quot; value=&quot;item4&quot;&gt; \r\n&lt;cfpdfformparam name=&quot;radiobutton1&quot; value=&quot;2&quot;&gt; \r\n&lt;\/cfpdfform&gt;<\/pre> \n<\/dd>\n<p class=\"dlseparator\"><\/p>\n<dt class=\"dlterm\">\n read action\n<\/dt> \n<dd xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">\n Use the \n <samp class=\"codeph\">read<\/samp> action to read the data from the source PDF form and generate a result structure that contains the form fields and their values. Also, you can use the read action to generate an XML data file from a PDF source file.\n <p>The following example shows how to read a PDF file and generate a result structure from the data:<\/p> \n <pre>&lt;!--- Use the read action to retrieve the values from the saved PDF. ---&gt; \r\n&lt;cfpdfform source=&quot;c:\\employeeid123.pdf&quot; result=&quot;resultStruct&quot; action=&quot;read&quot;\/&gt;<\/pre> \n <p>You can use the <samp class=\"codeph\">cfdump<\/samp> tag to display the result structure:<\/p> \n <pre>&lt;cfdump var=&quot;#resultStruct#&quot;&gt;<\/pre> \n <p>You can use the result fields in ColdFusion, for example, <samp class=\"codeph\">#resultStruct.employeeId#<\/samp> and <samp class=\"codeph\">#resultStruct.salary#<\/samp>.<\/p> \n <p>The following example shows how to read a PDF file and write the data to an XML file:<\/p> \n <pre>&lt;cfpdfform source=&quot;c:\\employeeid123.pdf&quot; result=&quot;c:\\employeeid123.xml&quot; overwrite=&quot;yes&quot;  \r\n    action=&quot;read&quot;\/&gt;<\/pre> \n <p>The following example shows how to read a PDF file into a variable that contains XML data:<\/p> \n <pre>&lt;cfpdfform source=&quot;c:\\employeeid123.pdf&quot; XMLdata=&quot;myXMLdata&quot; action=&quot;read&quot;\/&gt;<\/pre> \n <p>The following example shows how to read a PDF file into an XML data variable and generate a result structure. The <samp class=\"codeph\">cffile<\/samp> tag writes the data to an XML file:<\/p> \n <pre>&lt;cfset sourcefile = &quot;Grant Application Updated.pdf&quot;&gt; \r\n&lt;cfset resultfile = &quot;Expandpath('datafile_result1.xml')&quot;&gt; \r\n&lt;!--- Use the cfpdfform tag to read data extracted from a form into an XML data variable and \r\n    generate a result structure. ---&gt; \r\n&lt;cfpdfform source= &quot;#sourcefile#&quot; action=&quot;read&quot; xmldata=&quot;xmldata&quot; result=&quot;resultstruct&quot;\/&gt; \r\n&lt;!--- Use the cffile tag to write the XML data to a file. ---&gt; \r\n&lt;cffile action=&quot;write&quot;file=&quot;#resultfile#&quot; output=&quot;#xmldata#&quot;&gt; \r\n&lt;!---- Use the cfdump tag to display the result structure. ---&gt; \r\n&lt;cfdump var=&quot;#resultstruct#&quot;&gt;<\/pre> \n<\/dd>\n<p class=\"dlseparator\"><\/p><br>","Attribute":[{"REQOROPT":"NA","DESCRIPTION":"","default":"Required","Attribute":"action"},{"REQOROPT":"populate","DESCRIPTION":"Write to browser","default":"Optional","Attribute":"destination"},{"REQOROPT":"populate read","DESCRIPTION":false,"default":"Optional","Attribute":"overwrite"},{"REQOROPT":"populate","DESCRIPTION":false,"default":"Optional","Attribute":"overwriteData"},{"REQOROPT":"read","DESCRIPTION":"","default":"Optional (see Description)","Attribute":"result"},{"REQOROPT":"populate read","DESCRIPTION":"","default":"Required","Attribute":"source"},{"REQOROPT":"populate read","DESCRIPTION":"","default":"Optional (see Description)","Attribute":"XMLdata"},{"REQOROPT":"populate","DESCRIPTION":false,"default":"Optional","Attribute":"fdf"},{"REQOROPT":"populate read","DESCRIPTION":" ","default":"Optional","Attribute":"fdfdata"}]}