{"HISTORY":"<!-- --><br>ColdFusion MX: Deprecated the <samp class=\"codeph\">connectString<\/samp>, <samp class=\"codeph\">dbName<\/samp>, <samp class=\"codeph\">dbServer<\/samp>, <samp class=\"codeph\">dbtype<\/samp>, <samp class=\"codeph\">provider<\/samp>, and <samp class=\"codeph\">providerDSN<\/samp> attributes. They do not work, and might cause an error, in releases later than ColdFusion 5.<br>","SYNTAX":"<!-- --><br>&lt;cfinsert  \r\n    dataSource = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">data source name<\/i>&quot; \r\n    tableName = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">table name<\/i>&quot; \r\n    formFields = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">formfield1, formfield2, ...<\/i>&quot; \r\n    password = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">password<\/i>&quot; \r\n    tableOwner = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">owner<\/i>&quot; \r\n    tableQualifier = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">table qualifier<\/i>&quot; \r\n    username = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">user name<\/i>&quot;&gt;<br><span class=\"notetitle\">Note: <\/span>You can specify this tag’s attributes in an \n<samp class=\"codeph\">attributeCollection<\/samp> attribute whose value is a structure. Specify the structure name in the \n<samp class=\"codeph\">attributeCollection<\/samp> attribute and use the tag’s attribute names as structure keys.<br>","CATEGORY":"Database manipulation tags","PAGENAME":"cfinsert","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7d52.html\">cfprocparam<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f95.html\">cfprocresult<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fae.html\">cfquery<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f6f.html\">cfqueryparam<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7d55.html\">cfstoredproc<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7c6b.html\">cftransaction<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7c6a.html\">cfupdate<\/a><\/samp><br>","DESCRIPTION":"Inserts records in data sources from data in a ColdFusion form or form Scope.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;!--- This example shows how to use cfinsert instead of cfquery to put data in a  \r\n    datasource. ---&gt; \r\n&lt;!--- If form.POSTED exists, we insert new record, so begin cfinsert tag. ---&gt; \r\n&lt;cfif IsDefined (&quot;form.posted&quot;)&gt; \r\n    &lt;cfinsert dataSource = &quot;cfdocexamples&quot; \r\n        tableName = &quot;COMMENTS&quot; \r\n        formFields = &quot;Email,FromUser,Subject,MessText,Posted&quot;&gt; \r\n    &lt;h3&gt;&lt;I&gt;Your record was added to the database.&lt;\/i&gt;&lt;\/h3&gt; \r\n&lt;\/cfif&gt; \r\n \r\n&lt;cfif IsDefined (&quot;form.posted&quot;)&gt;  \r\n    &lt;cfif Server.OS.Name IS &quot;Windows NT&quot;&gt;  \r\n        &lt;cfinsert datasource=&quot;cfdocexamples&quot; tablename=&quot;COMMENTS&quot; \r\n            formfields=&quot;EMail,FromUser,Subject,MessText,Posted&quot;&gt;  \r\n    &lt;cfelse&gt;  \r\n        &lt;cfinsert datasource=&quot;cfdocexamples&quot; tablename=&quot;COMMENTS&quot; \r\n            formfields=&quot;CommentID,EMail,FromUser,Subject,MessText,Posted&quot;&gt;  \r\n    &lt;\/cfif&gt;  \r\n    &lt;h3&gt;&lt;i&gt;Your record was added to the database.&lt;\/i&gt;&lt;\/h3&gt; &lt;\/cfif&gt;  \r\n \r\n&lt;!--- Use a query to show the existing state of the database. ---&gt; \r\n&lt;cfquery name = &quot;GetComments&quot; dataSource = &quot;cfdocexamples&quot;&gt; \r\n    SELECT  \r\n        CommentID, EMail, FromUser, Subject, CommtType, MessText, Posted, Processed \r\n    FROM  \r\n        COMMENTS \r\n&lt;\/cfquery&gt; \r\n \r\n&lt;html&gt; \r\n&lt;head&gt;&lt;\/head&gt; \r\n&lt;h3&gt;cfinsert Example&lt;\/h3&gt; \r\n&lt;p&gt;First, show a list of the comments in the cfdocexamples datasource. \r\n&lt;!--- Show all the comments in the db. ---&gt; \r\n&lt;table&gt; \r\n    &lt;tr&gt; \r\n        &lt;td&gt;From User&lt;\/td&gt;&lt;td&gt;Subject&lt;\/td&gt;&lt;td&gt;Comment Type&lt;\/td&gt; \r\n        &lt;td&gt;Message&lt;\/td&gt;&lt;td&gt;Date Posted&lt;\/td&gt; \r\n    &lt;\/tr&gt; \r\n    &lt;cfoutput query = &quot;GetComments&quot;&gt; \r\n        &lt;tr&gt; \r\n            &lt;td valign = top&gt;&lt;a href = &quot;mailto:#Email#&quot;&gt;#FromUser#&lt;\/A&gt;&lt;\/td&gt; \r\n            &lt;td valign = top&gt;#Subject#&lt;\/td&gt; \r\n            &lt;td valign = top&gt;#CommtType#&lt;\/td&gt; \r\n            &lt;td valign = top&gt;&lt;font size = &quot;-2&quot;&gt;#Left(MessText, 125)#&lt;\/font&gt;&lt;\/td&gt; \r\n            &lt;td valign = top&gt;#Posted#&lt;\/td&gt; \r\n        &lt;\/tr&gt; \r\n    &lt;\/cfoutput&gt; \r\n&lt;\/table&gt; \r\n&lt;p&gt;Next, we'll offer the opportunity to enter a comment: \r\n&lt;!--- Make a form for input. ---&gt; \r\n&lt;form action = &quot;cfinsert.cfm&quot; method = &quot;post&quot;&gt; \r\n    &lt;pre&gt; \r\n    Email:   &lt;input type = &quot;Text&quot; name = &quot;email&quot;&gt; \r\n    From:    &lt;input type = &quot;Text&quot; name = &quot;fromUser&quot;&gt; \r\n    Subject: &lt;input type = &quot;Text&quot; name = &quot;subject&quot;&gt; \r\n    Message: &lt;textarea name = &quot;MessText&quot; COLS = &quot;40&quot; ROWS = &quot;6&quot;&gt;&lt;\/textarea&gt; \r\n    Date Posted:  &lt;cfoutput&gt;#DateFormat(Now())#&lt;\/cfoutput&gt; \r\n    &lt;!--- Dynamically determine today's date. ---&gt; \r\n    &lt;input type = &quot;hidden&quot;  \r\n        name = &quot;posted&quot; value = &quot;&lt;cfoutput&gt;#Now()#&lt;\/cfoutput&gt;&quot;&gt; \r\n    &lt;\/pre&gt; \r\n    &lt;input type = &quot;Submit&quot;  \r\n        name = &quot;&quot; value = &quot;insert my comment&quot;&gt; \r\n&lt;\/form&gt;<br><span class=\"notetitle\">Note: <\/span>The \n<samp class=\"codeph\">cfinsert<\/samp> tag internally uses parameterized queries.<br>","USAGE":"","Attribute":[{"REQOROPT":"Required","DESCRIPTION":"Data source; contains table.","default":"","Attribute":"dataSource"},{"REQOROPT":"Required","DESCRIPTION":"Table in which to insert form fields. ORACLE drivers: must be uppercase. Sybase driver: case-sensitive. Must be the same case used when table was created","default":"","Attribute":"tableName"},{"REQOROPT":"Optional","DESCRIPTION":"Comma-delimited list of form fields to insert. If not specified, all fields in the form are included. If a form field is not matched by a column name in the database, ColdFusion throws an error. The database table key field must be present in the form. It may be hidden.","default":"(all on form, except keys)","Attribute":"formFields"},{"REQOROPT":"Optional","DESCRIPTION":"Overrides password specified in ODBC setup.","default":"","Attribute":"password"},{"REQOROPT":"Optional","DESCRIPTION":"For data sources that support table ownership (such as SQL Server, Oracle, and Sybase SQL Anywhere), use this field to specify the owner of the table.","default":"","Attribute":"tableOwner"},{"REQOROPT":"Optional","DESCRIPTION":"For data sources that support table qualifiers, use this field to specify qualifier for table. The purpose of table qualifiers varies among drivers. For SQL Server and Oracle, qualifier refers to name of database that contains table. For Intersolv dBASE driver, qualifier refers to directory where DBF files are located.","default":"","Attribute":"tableQualifier"},{"REQOROPT":"Optional","DESCRIPTION":"Overrides username specified in ODBC setup.","default":"","Attribute":"username"}]}