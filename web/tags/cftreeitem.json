{"HISTORY":"<!-- --><br>ColdFusion 8: Added the<samp class=\"codeph\"> bind<\/samp> and <samp class=\"codeph\">onBindError<\/samp> attributes.<br>","SYNTAX":"<!-- --><br>&lt;cftreeitem  \r\n    value = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">text<\/i>&quot; \r\n    bind = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">bind expression<\/i>&quot; \r\n    display = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">text<\/i>&quot; \r\n    expand = &quot;yes|no&quot; \r\n    href = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">URL<\/i>&quot; \r\n    img = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">filename<\/i>&quot; \r\n    imgopen = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">filename<\/i>&quot; \r\n    parent = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">parent name<\/i>&quot; \r\n    query = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">queryname<\/i>&quot; \r\n    queryAsRoot = &quot;yes|no&quot; \r\n    target = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">URL target<\/i>&quot;&gt; \r\n \r\nOR \r\n \r\n&lt;cftreeitem  \r\n    bind = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">bind expression<\/i>&quot;&gt; \r\n    onBindError = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">JavaScript function name<\/i>&quot;<br><span class=\"notetitle\">Note: <\/span>You can specify this tag’s attributes in an \n<samp class=\"codeph\">attributeCollection<\/samp> attribute whose value is a structure. Specify the structure name in the \n<samp class=\"codeph\">attributeCollection<\/samp> attribute and use the tag’s attribute names as structure keys.<br>","CATEGORY":"Forms tags","PAGENAME":"cftreeitem","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7afc.html\">cfapplet<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fb7.html\">cfform<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7a48.html\">cfformgroup<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7ad4.html\">cfformitem<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7baf.html\">cfgrid<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f51.html\">cfinput<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7afe.html\">cfselect<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7aed.html\">cfslider<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7afd.html\">cftextarea<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7d84.html\">cftree<\/a><\/samp>; <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7a86.html\" target=\"_self\">Building tree controls with the cftree tag<\/a> and <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-6f14.html\" target=\"_self\">Using HTML trees<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Populates a form tree control, created with the cftree tag, with one or more elements.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>The following example creates a simple tree by using a single <samp class=\"codeph\">cftreeitem<\/samp> tag and a query:<br>&lt;cfform action = &quot;#cgi.script_name#&quot;&gt; \r\n    &lt;cftree name = &quot;Employees&quot; height = &quot;400&quot; width = &quot;200&quot;&gt; \r\n        &lt;cftreeitem value=&quot;LastName, FirstName, Emp_ID&quot; query=&quot;getEmployees&quot; \r\n         queryAsRoot=&quot;False&quot;&gt; \r\n    &lt;\/cftree&gt; \r\n&lt;\/cfform&gt;<br>The following example creates a tree that shows the basic information about all employees in an organization, organized by department. The departments are expanded to show all employees. You click the + signs to display additional information. If you click the employee name, ColdFusion links back to the same page and displays the selected employee’s ID.<br>&lt;!--- Query the datasource to get employee information.---&gt; \r\n&lt;!--- Group the output by Department.  \r\n    (All fields are required in Group By clause.) ---&gt; \r\n&lt;cfquery name = &quot;GetEmployees&quot; dataSource = &quot;cfdocexamples&quot;&gt; \r\n    SELECT Emp_ID, FirstName, LastName, EMail, Phone, Department \r\n    FROM Employees  \r\n    GROUP BY Department, Emp_ID, FirstName, LastName, EMail, Phone \r\n&lt;\/cfquery&gt; \r\n&lt;html&gt; \r\n&lt;body&gt; \r\n&lt;h3&gt;cftreeitem Example&lt;\/h3&gt; \r\n \r\n&lt;!--- The following runs if the user clicked on a link in the tree.  \r\n    A complete application would use the ID for additional processing. ---&gt; \r\n&lt;cfif isdefined(&quot;URL.user_ID&quot;)&gt; \r\n    &lt;cfoutput&gt; \r\n        &lt;!--- URL.cftreeitemkey is the selected tree item's value attribute. ---&gt; \r\n        You Requested information on #URL.cftreeitemKey#; User ID #URL.user_ID# \r\n    &lt;\/cfoutput&gt; \r\n    &lt;br&gt;&lt;br&gt; \r\n&lt;\/cfif&gt; \r\n&lt;!--- Display the tree. The cftree tag must be in a cfform. ---&gt; \r\n&lt;cfform&gt; \r\n    &lt;cftree name = &quot;Employees&quot; height = &quot;400&quot; width = &quot;200&quot;  \r\n        font = &quot;Arial Narrow&quot; highlighthref=&quot;No&quot; hscroll=&quot;No&quot;&gt;  \r\n        &lt;!--- cfoutput tag with a group attribute loops over the departments. ---&gt; \r\n        &lt;cfoutput group=&quot;Department&quot; query = &quot;GetEmployees&quot;&gt; \r\n            &lt;cftreeitem value=&quot;#Department#&quot; parent=&quot;Employees&quot; expand=&quot;yes&quot;&gt; \r\n            &lt;!--- This cfoutput tag loops over the records for the department. \r\n                    The cfoutput tag does not need any attributes. ---&gt; \r\n            &lt;cfoutput&gt; \r\n                &lt;!--- Create an item for each employee in the department. \r\n                    Do not expand children. Each employee name links to this page, \r\n                    and sends the employee ID in the query string.---&gt; \r\n                &lt;cftreeitem value = &quot;#LastName#, #FirstName#&quot;  \r\n                    display = &quot;#LastName#, #FirstName#&quot; \r\n                    parent = &quot;#Department#&quot; expand=&quot;no&quot; \r\n                    href=&quot;#cgi.script_name#?user_id=#emp_id#&quot;&gt; \r\n                &lt;!--- Each Employee entry has ID and ContactInfo children. ---&gt; \r\n                &lt;cftreeitem value = &quot;#Emp_ID#&quot; display = &quot;Employee ID: #Emp_ID#&quot;  \r\n                    parent = &quot;#LastName#, #FirstName#&quot;&gt; \r\n                &lt;!--- Each node must be unique value, so use Emp_ID om value. ---&gt; \r\n                &lt;cftreeitem value = &quot;#Emp_ID#_ContactInfo&quot;  \r\n                    display = &quot;Contact Information&quot;  \r\n                    parent = &quot;#LastName#, #FirstName#&quot; expand = &quot;No&quot;&gt; \r\n                &lt;!--- ContactInfo has two children. ---&gt; \r\n                &lt;cftreeitem value = &quot;#Phone#&quot; parent = &quot;#Emp_ID#_ContactInfo&quot;&gt; \r\n                &lt;cftreeitem value = &quot;#Email#&quot; parent = &quot;#Emp_ID#_ContactInfo&quot;&gt; \r\n            &lt;\/cfoutput&gt; \r\n        &lt;\/cfoutput&gt; \r\n    &lt;\/cftree&gt; \r\n&lt;\/cfform&gt;<br>","USAGE":"<!-- --><br>For this tag to work properly. the browser must be JavaScript-enabled. This tag must be a child of a <samp class=\"codeph\">cftree<\/samp> tag.<br>The <samp class=\"codeph\">cftreeitem<\/samp> tag has three basic formats:<br><li><p>If you do not use a <samp class=\"codeph\">query<\/samp> or <samp class=\"codeph\">bind<\/samp> attribute to populate this tag, it creates a single tree item. <\/p> <\/li> \n<li><p>If you use a <samp class=\"codeph\">query<\/samp>, it creates multiple items; each row of the query creates a hierarchically nested set of items with one item per column. <\/p> <\/li> \n<li><p>If you use the <samp class=\"codeph\">bind<\/samp> attribute, the client side tree dynamically gets the data for the tree item’s immediate children, and creates the child items, when a tree item expands. For detailed information on using the <samp class=\"codeph\">bind<\/samp> attribute to populate an HTML format tree, see <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-6f14.html\" target=\"_self\">Using HTML trees<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i>.<\/p> <\/li><br>","Attribute":[{"REQOROPT":"Required for applet, Flash, XML. value or bind is required for HTML.","DESCRIPTION":"Value passed when the form containing the tree is submitted. When populating a tree with data from a cfquery, you can specify multiple columns to use in a delimited list; for example, value=\"dept_id,emp_id\". In this case, each column generates an item that is a child of the column that precedes it in the list.","default":"","Attribute":"value"},{"REQOROPT":"value or bind is required for HTML","DESCRIPTION":"A bind expression specifying a CFC function, JavaScript function, or URL that dynamically gets all tree nodes. You can use this attribute only at the top level of the tree, and in this case, the tree can have only cftreeitem tag. If you use the bind attribute, the only other allowed attribute is onBindError. For details creating trees that using binding, see Using HTML trees in the Developing ColdFusion Applications","default":"","Attribute":"bind"},{"REQOROPT":"Optional; All","DESCRIPTION":"Tree item label. When populating a tree with data from a query, specify names in a delimited list, for example: display = \"dept_name,emp_name\"","default":"value","Attribute":"display"},{"REQOROPT":"Optional; All","DESCRIPTION":"yes: expands tree to show tree item children. no: keeps tree item collapsed.","default":true,"Attribute":"expand"},{"REQOROPT":"Optional; All","DESCRIPTION":"URL to link to if the user clicks the tree item. If you use a query attribute, the href attribute can specify a query column that contains URLs. If href is not a query column, the attribute text must be a URL or list of URLs. When populating a tree with data from a query, specify the URLs in a comma-delimited list, for example: href = \"http:\/\/dept_svr,http:\/\/emp_svr\"","default":"","Attribute":"href"},{"REQOROPT":"Optional; Applet, HTML, object","DESCRIPTION":"Image name, filename, or file URL for tree item icon. The following values are provided: cd computer document element folder floppy fixed remote You can also specify a custom image. To do so, include path and file extension; for example: img = \"..\/images\/page1.gif\" You can also specify a path relative to the web root. Custom images are not supported for Flash format. To specify more than one image in a tree, or an image at the second or subsequent level, use commas to separate names, corresponding to level; for example: img = \"folder,document\" img = \",document\" (example of second level)","default":"folder","Attribute":"img"},{"REQOROPT":"Optional; Applet, HTML, object","DESCRIPTION":"Icon displayed with open tree item, as described for the img attribute.","default":"","Attribute":"imgopen"},{"REQOROPT":"Optional; HTML","DESCRIPTION":"The name of a JavaScript function to execute if evaluating a bind expression results in an error. The function must take two attributes: an HTTP status code and a message. If you omit this attribute, and you specified a global error handler (by using the ColdFusion.setGlobalErrorHandler function), it displays the error message; otherwise a default error pop-up appears.","default":"see Description","Attribute":"onBindError"},{"REQOROPT":"Optional; All","DESCRIPTION":"Value of the tree item parent. Determines the item’s placement in the tree hierarchy. If omitted, the item is placed at the tree root level, or if the queryAsRoot attribute is True, directly under the query.","default":"","Attribute":"parent"},{"REQOROPT":"Optional; All","DESCRIPTION":"Query name to use to populate the treeitem. ColdFusion generates an item for each field value in the query column list specified by the value attribute. The fields in each row are hierarchically linked to the first column.","default":"","Attribute":"query"},{"REQOROPT":"Optional; All","DESCRIPTION":"Applies only if you specify a query attribute. Defines the query as the root level for all items generated by this tag. This attribute lets you avoid creating a parent cftreeitem. yes: generates a parent (root) item for all other items generated by the tag, with the query name as its value; if you specify a parent attribute, the root item is a child of the specified parent. no: uses the item specified by the parent attribute as the immediate parent of all items generated by this tag. If there is no parent attribute, use the query as the parent. A string: creates a root item and uses the specified string as the item name; if you specify a parent attribute, the root item is a child of the specified parent.","default":true,"Attribute":"queryAsRoot"},{"REQOROPT":"Optional; All","DESCRIPTION":"Target attribute of href URL. When populating a tree with data from a query, specify targets in a comma-delimited list, for example: target = \"FRAME_BODY,_blank\"","default":"","Attribute":"target"}]}