{"HISTORY":"<!-- --><br>ColdFusion MX 7: Added the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">algorithm<\/i> parameter.<br>","SYNTAX":"<!-- --><br>RandRange(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">number1<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">number2<\/i>[, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">algorithm<\/i>])<br>","CATEGORY":"Mathematical functions, Security functions","PAGENAME":"RandRange","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7af6.html\">Rand<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6d3e.html\">Randomize<\/a><\/samp><br>","DESCRIPTION":"Generates a pseudo-random integer in the range between two specified numbers.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>The following example contains a form that requires random number range values, and lets you optionally specify a random number seed value. It uses <samp class=\"codeph\">cfform<\/samp> controls and attributes to specify a default range, ensure that the range fields have values, and validate that the field values are in a specified integer range. When you submit the form, it checks whether the seed field has an empty string; if the field has a value, the code uses the number to seed the random number generator. It then generates and displays the random number.<br>&lt;h3&gt;RandRange Example&lt;\/h3&gt; \r\n \r\n&lt;!--- Do the following only if the form has been submitted. ---&gt; \r\n&lt;cfif IsDefined(&quot;Form.mySeed&quot;)&gt; \r\n \r\n    &lt;!--- Do the following only if the seed field has a non-empty string. ---&gt; \r\n    &lt;cfif Form.mySeed NEQ &quot;&quot;&gt; \r\n        &lt;cfoutput&gt; \r\n            &lt;b&gt;Seed value is #FORM.mySeed#&lt;\/b&gt;&lt;br&gt; \r\n        &lt;\/cfoutput&gt; \r\n        &lt;br&gt; \r\n \r\n        &lt;!--- Call Randomize to seed the random number generator. ---&gt; \r\n        &lt;cfset r = Randomize(FORM.mySeed, &quot;SHA1PRNG&quot;)&gt; \r\n    &lt;cfelse&gt; \r\n        &lt;b&gt;No Seed value submitted&lt;\/b&gt;&lt;br&gt; \r\n    &lt;\/cfif&gt; \r\n \r\n    &lt;!--- Generate and display the random number. ---&gt; \r\n    &lt;cfoutput&gt;&lt;p&gt;&lt;b&gt; \r\n        RandRange returned: #RandRange(FORM.myInt, FORM.myInt2, &quot;SHA1PRNG&quot;)# \r\n    &lt;\/cfoutput&gt;&lt;\/b&gt;&lt;\/p&gt; \r\n&lt;\/cfif&gt; \r\n \r\n&lt;!--- This form uses cfform input validation to check the input range. ---&gt; \r\n&lt;cfform action = &quot;#CGI.SCRIPT_NAME#&quot;&gt; \r\n&lt;p&gt;Enter the random number Range: From  \r\n&lt;cfinput type = &quot;Text&quot; name = &quot;MyInt&quot; value = &quot;1&quot;  \r\n    RANGE = &quot;-1000000000,1000000000&quot; \r\n    message = &quot;Please enter a value between -1,000,000,000 and 1,000,000,000&quot; \r\n    validate = &quot;integer&quot; required = &quot;Yes&quot;&gt; \r\nTo  \r\n&lt;cfinput type = &quot;Text&quot; name = &quot;MyInt2&quot; value = &quot;9999&quot;  \r\n    RANGE = &quot;-1000000000,1000000000&quot; \r\n    message = &quot;Please enter a value between --1,000,000,000and 1,000,000,000&quot; \r\n    validate = &quot;integer&quot; required = &quot;Yes&quot;&gt;&lt;\/p&gt; \r\n&lt;p&gt;Enter a number to seed the randomizer:  \r\n&lt;cfinput type = &quot;Text&quot; name = &quot;mySeed&quot; RANGE = &quot;-1000000000,1000000000&quot; \r\n    message = &quot;Please enter a value between -1,000,000,000 and 1,000,000,000&quot; \r\n    validate = &quot;integer&quot; required = &quot;No&quot;&gt;&lt;\/p&gt; \r\n&lt;p&gt;&lt;input type = &quot;Submit&quot; name = &quot;&quot;&gt; \r\n&lt;\/cfform&gt;<br>","USAGE":"<!-- --><br>Very large positive or negative values for the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">number1<\/i> and <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">number2<\/i> parameters might result in poor randomness in the results. To prevent this problem, do not specify numbers outside the range -1,000,000,000 – 1,000,000,000.<br>ColdFusion uses the Java Cryptography Extension (JCE) and installs a Sun Java 1.4.2 runtime that includes the Sun JCE default security provider. This provider includes the algorithms listed in the Parameters section (except the default algorithm). The JCE framework includes facilities for using other provider implementations; however, cannot provide technical support for third-party security providers.<br>","Parameter":[{"DESCRIPTION":"Integer numbers. If the numbers are not in the range -2,147,483,648 – 2,147,483,647, ColdFusion generates an error.","Parameter":"number1, number2"},{"DESCRIPTION":"(Optional) The algorithm to use to generate the random number. ColdFusion installs a cryptography library with the following algorithms: CFMX_COMPAT: the algorithm used in ColdFusion (default). SHA1PRNG: generates a number using the Sun Java SHA1PRNG algorithm. This algorithm provides greater randomness than the default algorithm IBMSecureRandom: for IBM WebSphere (IBM JVM does not support the SHA1PRNG algorithm.)","Parameter":"algorithm"}]}