{"HISTORY":"<!-- --><br>ColdFusion MX: Changed behavior: if the mask format cannot correctly mask a number, this function returns the number unchanged. (It does not truncate the number nor throw an error.) (If no mask is selected, ColdFusion MX rounds the decimal part as ColdFusion 5 does. For example, it rounds 34.567 to 35.)<br>","SYNTAX":"<!-- --><br>NumberFormat(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">number<\/i> [, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">mask<\/i> ])<br>","CATEGORY":"Display and formatting functions","PAGENAME":"NumberFormat","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6d58.html\">DecimalFormat<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7b05.html\">DollarFormat<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fa4.html\">IsNumeric<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6d91.html\">LSNumberFormat<\/a><\/samp><br>","DESCRIPTION":"Creates a custom-formatted number value. Supports the numeric formatting used in the U.S. For international number formatting, see LSNumberFormat.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;h3&gt;NumberFormat Example&lt;\/h3&gt; \r\n \r\n&lt;cfloop FROM = 1000 TO = 1020 INDEX = &quot;counter&quot;&gt; \r\n&lt;cfset CounterRoot2 = counter * sqr(2)&gt; \r\n \r\n&lt;!--- Show result in default format, adding comma for thousands place;  \r\n    and in custom format, displaying to two decimal places ---&gt; \r\n&lt;cfoutput&gt; \r\n&lt;pre&gt;#counter# * Square Root of 2: #NumberFormat(CounterRoot2, \r\n'_____.__')#&lt;\/pre&gt; \r\n&lt;pre&gt;#counter# * Square Root of 2: #NumberFormat(CounterRoot2)#&lt;\/pre&gt; \r\n&lt;\/cfoutput&gt; \r\n&lt;\/cfloop&gt;<br>","USAGE":"<!-- --><br>This function uses Java standard locale formatting rules on all platforms.<br>The position of symbols in format masks determines where the codes take effect. For example, if you put a dollar sign at the far left of a format mask, ColdFusion displays a dollar sign at the left edge of the formatted number. If you separate the dollar sign on the left edge of the format mask by at least one underscore, ColdFusion displays the dollar sign just to the left of the digits in the formatted number.<br>These examples show how symbols determine formats:<br><table border=\"1\" cellpadding=\"4\" cellspacing=\"0\">\n <thead align=\"left\">\n  <tr>\n   <th valign=\"top\" width=\"NaN%\" id=\"d17e153491\"><p>Number<\/p> <\/th> \n   <th valign=\"top\" width=\"NaN%\" id=\"d17e153494\"><p>Mask<\/p> <\/th> \n   <th valign=\"top\" width=\"NaN%\" id=\"d17e153497\"><p>Result<\/p> <\/th> \n  <\/tr> \n <\/thead> \n <tbody>\n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153491 \"><p>4.37<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153494 \"><p>$____.__<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153497 \"><p>&quot;$ 4.37&quot;<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153491 \"><p>4.37<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153494 \"><p>_$___.__<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153497 \"><p>&quot; $4.37&quot;<\/p> <\/td> \n  <\/tr> \n <\/tbody> \n<\/table><br>The positioning can also show where to place the minus sign for negative numbers:<br><table border=\"1\" cellpadding=\"4\" cellspacing=\"0\">\n <thead align=\"left\">\n  <tr>\n   <th valign=\"top\" width=\"NaN%\" id=\"d17e153530\"><p>Number<\/p> <\/th> \n   <th valign=\"top\" width=\"NaN%\" id=\"d17e153533\"><p>Mask<\/p> <\/th> \n   <th valign=\"top\" width=\"NaN%\" id=\"d17e153536\"><p>Result<\/p> <\/th> \n  <\/tr> \n <\/thead> \n <tbody>\n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153530 \"><p>-4.37<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153533 \"><p>-____.__<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153536 \"><p>&quot;- 4.37&quot;<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153530 \"><p>-4.37<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153533 \"><p>_-___.__<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153536 \"><p>&quot; -4.37&quot;<\/p> <\/td> \n  <\/tr> \n <\/tbody> \n<\/table><br>The positions for a symbol are: far left, near left, near right, and far right. The left and right positions are determined by the side of the decimal point on which the code character is shown. For formats that do not have a fixed number of decimal places, you can use a caret (^) to separate the left fields from the right.<br>An underscore determines whether the code is placed in the far or near position. Most code charactersâ€™ effect is determined by the field in which they are located. This example shows how to specify where to put parentheses to display negative numbers:<br><table border=\"1\" cellpadding=\"4\" cellspacing=\"0\">\n <thead align=\"left\">\n  <tr>\n   <th valign=\"top\" width=\"NaN%\" id=\"d17e153571\"><p>Number<\/p> <\/th> \n   <th valign=\"top\" width=\"NaN%\" id=\"d17e153574\"><p>Mask<\/p> <\/th> \n   <th valign=\"top\" width=\"NaN%\" id=\"d17e153577\"><p>Result<\/p> <\/th> \n  <\/tr> \n <\/thead> \n <tbody>\n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153571 \"><p>3.21<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153574 \"><p>C(__^__)<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153577 \"><p>&quot;( 3.21 )&quot;<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153571 \"><p>3.21<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153574 \"><p>C__(^__)<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153577 \"><p>&quot; (3.21 )&quot;<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153571 \"><p>3.21<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153574 \"><p>C(__^)__<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153577 \"><p>&quot;( 3.21) &quot;<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153571 \"><p>3.21<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153574 \"><p>C__(^)__<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e153577 \"><p>&quot; (3.21) &quot;<\/p> <\/td> \n  <\/tr> \n <\/tbody> \n<\/table><br>When converting from string to double, to prevent rounding errors, this function adds a rounding factor of 1.5543122344752E-014 to the converted number. For example, without adding the rounding factor, converting the string value 1.275 to double with two digits of precision results in a value of 1.27499999999999999, which would be rounded up to 1.27. By adding the rounding factor, the conversion correctly results in a value of 1.28.<br>If you round off a double such as 1.99499999999999999999999999999, where the last decimal is 10E-14, the rounding factor can cause an incorrect result.<br>To set the default display format of date, time, number, and currency values, use the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fa3.html\">SetLocale<\/a><\/samp> function.<br>","Parameter":[{"DESCRIPTION":"A number.","Parameter":"number"},{"DESCRIPTION":"A string or a variable that contains one. Set of characters that determine how ColdFusion displays the number","Parameter":"mask"},{"DESCRIPTION":"Optional. Digit placeholder.","Parameter":"_ (underscore)"},{"DESCRIPTION":"Optional. Digit placeholder. (Shows decimal places more clearly than _.)","Parameter":9},{"DESCRIPTION":"Location of a mandatory decimal point.","Parameter":"."},{"DESCRIPTION":"Located to the left or right of a mandatory decimal point. Pads with zeros.","Parameter":0},{"DESCRIPTION":"If number is less than zero, puts parentheses around the mask.","Parameter":"( )"},{"DESCRIPTION":"Puts plus sign before positive number; minus sign before negative number.","Parameter":"+"},{"DESCRIPTION":"Puts a space before positive number; minus sign before negative number.","Parameter":"-"},{"DESCRIPTION":"Separates every third decimal place with a comma.","Parameter":","},{"DESCRIPTION":"Left-justifies or center-justifies number within width of mask column. First character of mask must be L or C. The default value is right-justified.","Parameter":"L,C"},{"DESCRIPTION":"Puts a dollar sign before formatted number. First character of mask must be the dollar sign ($).","Parameter":"$"},{"DESCRIPTION":"Separates left and right formatting.","Parameter":"^"}]}