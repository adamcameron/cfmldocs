{"HISTORY":"<!-- --><br>ColdFusion 8: Added function<br>","SYNTAX":"<!-- --><br><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Sleep(duration) <\/i><br>","CATEGORY":"System functions","PAGENAME":"Sleep","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-75a8.html\">cfthread<\/a><\/samp>, <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7f6a.html\" target=\"_self\">Using ColdFusion Threads<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Causes the current thread to stop processing for a specified period of time.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>The following example has two threads. The second thread (threadB) uses the <samp class=\"codeph\">sleep<\/samp> function to ensure that the first thread (threadA) has completed before it starts processing.<br>&lt;!--- ThreadA loops to simulate an initialization activity that might take time. ---&gt; \r\n&lt;cfthread name=&quot;threadA&quot; action=&quot;run&quot;&gt; \r\n        &lt;cfset thread.j=1&gt; \r\n        &lt;cfloop index=&quot;i&quot; from=&quot;1&quot; to=&quot;99999&quot;&gt; \r\n         &lt;cfset thread.j=thread.j+1&gt;  \r\n    &lt;\/cfloop&gt; \r\n&lt;\/cfthread&gt; \r\n \r\n&lt;!--- ThreadB loops while threadA is not finished, sleeping for  \r\n        1\/2 second each time. ---&gt;  \r\n&lt;cfthread name=&quot;threadB&quot; action=&quot;run&quot;&gt; \r\n    &lt;cfscript&gt; \r\n        thread.sleepTimes=0; \r\n        thread.initialized=false; \r\n        while ((threadA.Status != &quot;COMPLETED&quot;) &amp;&amp; (threadA.Status  \r\n                != &quot;TERMINATED&quot;)) { \r\n            sleep(500); \r\n            thread.sleeptimes++; \r\n        } \r\n        \/\/ Only do the post-initilization code if the threadA completed. \r\n        If (threadA.Status == &quot;COMPLETED&quot;) { \r\n            thread.initialized=true;  \r\n            \/\/ Post-initialization code would go here. \r\n        } \r\n    &lt;\/cfscript&gt; \r\n&lt;\/cfthread&gt; \r\n \r\n&lt;!Join the threads. ---&gt; \r\n&lt;cfthread action=&quot;join&quot; name=&quot;threadA,threadB&quot; timeout=&quot;10000&quot;\/&gt; \r\n \r\n&lt;!--- Display the thread information. ---&gt; \r\n&lt;!--- Different actions might be taken based on the thread status information. ---&gt; \r\n&lt;cfoutput&gt; \r\n    threadA index value: #threadA.j#&lt;br \/&gt; \r\n    threadA status: #threadA.Status#&lt;br&gt; \r\n    threadB status: #threadB.Status#&lt;br&gt; \r\n    threadB sleepTimes: #threadB.sleepTimes#&lt;br&gt; \r\n    threadB initialized: #threadB.initialized#&lt;br&gt; \r\n&lt;\/cfoutput&gt;<br>","USAGE":"","Parameter":[{"DESCRIPTION":"Time, in milliseconds, to stop processing the thread.","Parameter":"duration"}]}