{"HISTORY":"<!-- --><br>ColdFusion MX: Changed behavior: ColdFusion automatically escapes simple-variable, array-variable, and structure-variable references within a <samp class=\"codeph\">cfquery<\/samp> tag body or block. (Earlier releases did not automatically escape array-variable references.)<br>","SYNTAX":"<!-- --><br>PreserveSingleQuotes(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">variable<\/i>)<br>","CATEGORY":"Other functions","PAGENAME":"PreserveSingleQuotes","SEEALSO":"","DESCRIPTION":"Prevents ColdFusion from automatically escaping single-quotation mark characters that are contained in a variable. ColdFusion does not evaluate the argument.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;h3&gt;PreserveSingleQuotes Example&lt;\/h3&gt;&lt;p&gt;This is a useful function for \r\n    creating lists of information to return from a query. In this example,  \r\n    we pick the list of Centers in Suisun, San Francisco, and San Diego,  \r\n    using the SQL grammar IN to modify a WHERE clause, rather than looping  \r\n    through the result set after the query is run. \r\n&lt;cfset List = &quot;'Suisun', 'San Francisco', 'San Diego'&quot;&gt; \r\n&lt;cfquery name = &quot;GetCenters&quot; datasource = &quot;cfdocexamples&quot;&gt; \r\n    SELECT Name, Address1, Address2, City, Phone \r\n    FROM Centers \r\n    WHERE City IN (#PreserveSingleQuotes(List)#) \r\n&lt;\/cfquery&gt; \r\n&lt;p&gt;We found &lt;cfoutput&gt;#GetCenters.RecordCount#&lt;\/cfoutput&gt; records. \r\n&lt;cfoutput query = &quot;GetCenters&quot;&gt; \r\n&lt;p&gt;#Name#&lt;br&gt;     \r\n#Address1#&lt;br&gt; \r\n&lt;cfif Address2 is not &quot;&quot;&gt;#Address2# \r\n    &lt;\/cfif&gt; \r\n#City#&lt;br&gt; \r\n#Phone#&lt;br&gt; \r\n&lt;\/cfoutput&gt;<br>","USAGE":"<!-- --><br>This function is useful in SQL statements to defer evaluation of a variable reference until runtime. This prevents errors that result from the evaluation of a single-quote or apostrophe data character (for example, &quot;Joeâ€™s Diner&quot;) as a delimiter.<br><strong>Example A<\/strong>: Consider this code:<br>&lt;cfset mystring = &quot;'Newton's Law', 'Fermat's Theorem'&quot;&gt; \r\nPreserveSingleQuotes(#mystring#) is \r\n&lt;cfoutput&gt; \r\n    #PreserveSingleQuotes(mystring)# \r\n&lt;\/cfoutput&gt;<br>The output is as follows:<br>PreserveSingleQuotes(#mystring#) is 'Newton's Law', 'Fermat's Theorem'<br><strong>Example B<\/strong>: Consider this code:<br>&lt;cfset list0 = &quot; '1','2', '3' &quot;&gt; \r\n&lt;cfquery sql = &quot;select * from foo where bar in (#list0#)&quot;&gt;<br>ColdFusion escapes the single-quote characters in the list as follows:<br>&quot;&quot;1&quot;&quot;, &quot;&quot;2&quot;&quot;, &quot;&quot;3&quot;&quot;<br>The <samp class=\"codeph\">cfquery<\/samp> tag throws an error.<br>You code this function correctly as follows:<br>&lt;cfquery sql = &quot;select * from foo where bar in (#preserveSingleQuotes(list0)#)&quot;&gt; **tharwood 11\/16<br>This function ensures that ColdFusion evaluates the code as follows:<br>'1', '2', '3'<br>","Parameter":[{"DESCRIPTION":"Variable that contains a string in which to preserve single-quotation marks.","Parameter":"variable"}]}