{"HISTORY":"<!-- --><br>ColdFusion MX:<br><li><p>Changed thrown exceptions: This function can throw the ArraySortSimpleValueException error and ValueNotNumeric error.<\/p> <\/li> \n<li><p>Changed the order in which sorted elements are returned: In a <samp class=\"codeph\">textnocase<\/samp>, descending sort, this function might return elements in a different sort order than in earlier releases. If <samp class=\"codeph\">sort_type = &quot;textnocase&quot; <\/samp>and <samp class=\"codeph\">sort_order = &quot;desc&quot;<\/samp>, ColdFusion processes elements that <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">differ only in case<\/i> differently from earlier releases, as follows:<\/p> \n <ul>\n  <li><p>ColdFusion reverses the elements’ original order.<\/p> <\/li> \n  <li><p>Releases earlier than ColdFusion MX do not change the elements’ original order.<\/p> <\/li> \n <\/ul> <p>For example, in a <samp class=\"codeph\">textnocase<\/samp>, <samp class=\"codeph\">desc<\/samp> sort of <samp class=\"codeph\">d,a,a,b,A<\/samp>, the following occurs:<\/p> \n <ul>\n  <li><p>ColdFusion MX and later returns <samp class=\"codeph\">d,b,A,a,a<\/samp><\/p> <\/li> \n  <li><p>Releases earlier than ColdFusion MX return <samp class=\"codeph\">d,b,a,a,A<\/samp><\/p> <\/li> \n <\/ul> <\/li><br>","SYNTAX":"<!-- --><br>ArraySort(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">array<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">sort_type<\/i><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">[<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">sort_order<\/i><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">]<\/i>)<br>","CATEGORY":"Array functions, List functions","PAGENAME":"ArraySort","SEEALSO":"","DESCRIPTION":"Sorts array elements numerically or alphanumerically.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;!--- This example shows ArraySort. ---&gt; \r\n&lt;cfquery name = &quot;GetEmployeeNames&quot; datasource = &quot;cfdocexamples&quot;&gt; \r\n    SELECT FirstName, LastName FROM Employees \r\n&lt;\/cfquery&gt; \r\n&lt;!--- Create an array. ---&gt; \r\n&lt;cfset myArray = ArrayNew(1)&gt; \r\n&lt;!--- Loop through the query and append these names successively to the last element. ---&gt; \r\n&lt;cfloop query = &quot;GetEmployeeNames&quot;&gt; \r\n    &lt;cfset temp = ArrayAppend(myArray, &quot;#FirstName# #LastName#&quot;)&gt; \r\n&lt;\/cfloop&gt; \r\n&lt;!--- Show the resulting array as a list. ---&gt; \r\n&lt;cfset myList = ArrayToList(myArray, &quot;,&quot;)&gt; \r\n&lt;!--- Sort that array in descending order alphabetically. ---&gt; \r\n&lt;cfset isSuccessful = ArraySort(myArray, &quot;textnocase&quot;, &quot;desc&quot;)&gt; \r\n...<br>","USAGE":"","Parameter":[{"DESCRIPTION":"Name of an array","Parameter":"array"},{"DESCRIPTION":"numeric: sorts numbers text: sorts text alphabetically, taking case into account (also known as case sensitive). All letters of one case precede the first letter of the other case: - aabzABZ, if sort_order = \"asc\" (ascending sort) - ZBAzbaa, if sort_order = \"desc\" (descending sort) textnocase: sorts text alphabetically, without regard to case (also known as case-insensitive). A letter in varying cases precedes the next letter: - aAaBbBzzZ, in an ascending sort; preserves original intra-letter order - ZzzBbBaAa, in a descending sort; reverses original intra-letter order","Parameter":"sort_type"},{"DESCRIPTION":"asc - ascending sort order. Default. - aabzABZ or aAaBbBzzZ, depending on value of sort_type, for letters - from smaller to larger, for numbers desc - descending sort order. - ZBAzbaa or ZzzBbBaAa, depending on value of sort_type, for letters - from larger to smaller, for numbers","Parameter":"sort_order"}]}