{"HISTORY":"","SYNTAX":"<!-- --><br>StructKeyList(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">structure<\/i> [, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">delimiter<\/i>])<br>","CATEGORY":"Structure functions","PAGENAME":"StructKeyList","SEEALSO":"<!-- --><br><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-69b8.html\">Structure functions<\/a>; <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-68dc.html\" target=\"_self\">Modifying a ColdFusion XML object<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Extracts keys from a ColdFusion structure.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;!--- This example shows how to use StructKeyList to list the keys  \r\n    in a structure. It uses StructNew function to create structure  \r\n    and fills it with information user enters in form fields. ---&gt; \r\n&lt;!--- This section creates structure and checks whether Submit has been pressed.  \r\n    If so, code defines fields in the employee structure with what the  \r\n    user entered in the form. ---&gt; \r\n&lt;cfset employee = StructNew()&gt;  \r\n&lt;cfif Isdefined(&quot;Form.Submit&quot;)&gt; \r\n    &lt;cfif Form.Submit is &quot;OK&quot;&gt; \r\n        &lt;cfset employee.firstname = FORM.firstname&gt; \r\n        &lt;cfset employee.lastname = FORM.lastname&gt; \r\n        &lt;cfset employee.email = FORM.email&gt; \r\n        &lt;cfset employee.phone = FORM.phone&gt; \r\n        &lt;cfset employee.company = FORM.company&gt;  \r\n    &lt;cfelseIf Form.Submit is &quot;Clear&quot;&gt; \r\n        &lt;cfset rc = StructClear(employee)&gt; \r\n    &lt;\/cfif&gt; \r\n&lt;\/cfif&gt;     \r\n&lt;html&gt; \r\n&lt;head&gt; \r\n    &lt;title&gt;StructKeyList Function&lt;\/title&gt; \r\n&lt;\/head&gt; \r\n&lt;body&gt; \r\n&lt;h3&gt;StructKeyList Function&lt;\/h3&gt; \r\n&lt;h3&gt;Listing the Keys in the Employees Structure&lt;\/h3&gt; \r\n&lt;p&gt;This example uses StructNew function to create structure &quot;employee&quot; that \r\n    supplies employee information. The fields are filled with the  \r\n    contents of the following form.&lt;\/p&gt; \r\n&lt;p&gt;After you enter employee information into structure, example uses \r\n    &lt;b&gt;StructKeyList&lt;\/b&gt; function to list keys in structure.&lt;\/p&gt; \r\n&lt;p&gt;This code does not show how to insert information into a database.  \r\n    See cfquery for more information about database insertion. \r\n&lt;hr size = &quot;2&quot; color = &quot;#0000A0&quot;&gt; \r\n&lt;form action = &quot;structkeylist.cfm&quot;&gt; \r\n&lt;table cellspacing = &quot;2&quot; cellpadding = &quot;2&quot; border = &quot;0&quot;&gt; \r\n    &lt;tr&gt; \r\n    &lt;td&gt;First Name:&lt;\/td&gt; \r\n    &lt;td&gt;&lt;input name = &quot;firstname&quot; type = &quot;text&quot;  \r\n        value = &quot;&quot; hspace = &quot;30&quot; maxlength = &quot;30&quot;&gt;&lt;\/td&gt; \r\n    &lt;\/tr&gt; \r\n    &lt;tr&gt; \r\n    &lt;td&gt;Last Name:&lt;\/td&gt; \r\n    &lt;td&gt;&lt;input name = &quot;lastname&quot; type = &quot;text&quot;  \r\n        value = &quot;&quot; hspace = &quot;30&quot; maxlength = &quot;30&quot;&gt;&lt;\/td&gt; \r\n    &lt;\/tr&gt; \r\n    &lt;tr&gt; \r\n    &lt;td&gt;EMail&lt;\/td&gt; \r\n    &lt;td&gt;&lt;input name = &quot;email&quot; type = &quot;text&quot;  \r\n        value = &quot;&quot; hspace = &quot;30&quot; maxlength = &quot;30&quot;&gt;&lt;\/td&gt; \r\n    &lt;\/tr&gt; \r\n    &lt;tr&gt; \r\n    &lt;td&gt;Phone:&lt;\/td&gt; \r\n    &lt;td&gt;&lt;input name = &quot;phone&quot; type = &quot;text&quot;  \r\n        value = &quot;&quot; hspace = &quot;20&quot; maxlength = &quot;20&quot;&gt;&lt;\/td&gt; \r\n    &lt;\/tr&gt; \r\n    &lt;tr&gt; \r\n    &lt;td&gt;Company:&lt;\/td&gt; \r\n    &lt;td&gt;&lt;input name = &quot;company&quot; type = &quot;text&quot;  \r\n        value = &quot;&quot; hspace = &quot;30&quot; maxlength = &quot;30&quot;&gt;&lt;\/td&gt; \r\n    &lt;\/tr&gt; \r\n    &lt;tr&gt; \r\n    &lt;td&gt;&lt;input type = &quot;submit&quot; name = &quot;submit&quot;         value = &quot;OK&quot;&gt;&lt;\/td&gt; \r\n    &lt;td&gt;&lt;b&gt;After you submit form, scroll down         to see the list.&lt;\/b&gt;&lt;\/td&gt; \r\n    &lt;\/tr&gt; \r\n&lt;\/table&gt; \r\n&lt;\/form&gt; \r\n&lt;cfif NOT StructISEmpty(employee)&gt;  \r\n    &lt;hr size = &quot;2&quot; color = &quot;#0000A0&quot;&gt;  \r\n    &lt;cfset keysToStruct = StructKeyList(employee,&quot;&lt;li&gt;&quot;)&gt; \r\n    &lt;p&gt;Here are the keys to the structure:&lt;\/p&gt;  \r\n    &lt;ul&gt; \r\n    &lt;li&gt;    &lt;cfoutput&gt;#keysToStruct#&lt;\/cfoutput&gt; \r\n    &lt;\/ul&gt; \r\n    &lt;p&gt;If fields are correct, we can process new employee information.  \r\n    If they are not correct, consider rewriting application.&lt;\/p&gt; \r\n&lt;\/cfif&gt;<br>","USAGE":"<!-- --><br>A structureâ€™s keys are unordered.<br>","Parameter":[{"DESCRIPTION":"Structure from which to extract a list of keys.","Parameter":"structure"},{"DESCRIPTION":"Optional. Character that separates keys in list. The default value is comma.","Parameter":"delimiter"}]}