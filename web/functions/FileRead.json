{"HISTORY":"<!-- --><br>ColdFusion 8: Added this function.<br>","SYNTAX":"<!-- --><br>FileRead(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">filepath<\/i> [, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">charset<\/i>]) \r\n \r\nOR \r\n \r\nFileRead(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">fileobj<\/i> [, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">buffersize<\/i>])<br>","CATEGORY":"System functions","PAGENAME":"FileRead","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6da1.html\">FileClose<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6dc8.html\">FileIsEOF<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6d66.html\">FileReadBinary<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6d46.html\">FileReadLine<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6cdf.html\">FileWrite<\/a><\/samp><br>","DESCRIPTION":"Reads an on-disk or in-memory text file or a file object created with the FileOpen function. You use this function either as an alternative to the cffile tag with the action=\"read\" attribute. You can also use this function to improve performance when reading a large file, because FileRead does not read the entire file into memory.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;h3&gt;FileRead Example - Reading a file&lt;\/h3&gt; \r\n \r\n&lt;!--- This reads and outputs the entire file contents. ---&gt; \r\n&lt;cfscript&gt; \r\nmyfile = FileRead(&quot;c:\\temp\\myfile.txt&quot;); \r\n    WriteOutput(&quot;#myfile#&quot;); \r\n&lt;\/cfscript&gt; \r\n \r\n&lt;!--- This reads and outputs the first 100 characters ---&gt; \r\n&lt;!--- from the same file. ---&gt; \r\n&lt;cfscript&gt; \r\nmyfile = FileOpen(&quot;c:\\temp\\test1.txt&quot;, &quot;read&quot;); \r\nx = FileRead(myfile, 100); \r\nWriteOutput(&quot;#x#&quot;); \r\nFileClose(myfile); \r\n&lt;\/cfscript&gt;<br>","USAGE":"<!-- --><br>You can read a text file or a file object with the <samp class=\"codeph\">FileRead<\/samp> function. When you specify an absolute path of a text file, ColdFusion reads the entire contents of the file. When you specify a file object, which you created using the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6d9c.html\">FileOpen<\/a><\/samp> function, ColdFusion reads the number of characters specified in <samp class=\"codeph\">buffersize<\/samp>.<br>","Parameter":[{"DESCRIPTION":"An absolute path to an on-disk or in-memory text file on the server.","Parameter":"filepath"},{"DESCRIPTION":"The character encoding in which the file contents is encoded. The following list includes commonly used values: utf-8 iso-8859-1 windows-1252 us-ascii shift_jis iso-2022-jp euc-jp euc-kr big5 euc-cn utf-16 If the file starts with a byte order mark and you set this attribute to a conflicting character encoding, ColdFusion generates an error.","Parameter":"charset"},{"DESCRIPTION":"The file object from which to read.","Parameter":"fileobj"},{"DESCRIPTION":"The number of characters to read.","Parameter":"buffersize"}]}