{"HISTORY":"","SYNTAX":"<!-- --><br>StructSort(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">base<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">sortType<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">sortOrder<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">pathToSubElement<\/i>)<br>","CATEGORY":"Structure functions","PAGENAME":"StructSort","SEEALSO":"<!-- --><br><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-69b8.html\">Structure functions<\/a>; <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-6210.html\" target=\"_self\">Structure functions<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Returns a sorted array of the top level keys in a structure. Sorts using alphabetic or numeric sorting, and can sort based on the values of any structure element.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;cfscript&gt; \r\n    salaries = StructNew() ; \r\n    employees = StructNew() ; \r\n    departments = StructNew() ; \r\n    for ( i=1; i lt 6; i=i+1 ) \r\n    { \r\n        salary = 120000 - i*10000 ; \r\n        salaries[&quot;employee#i#&quot;] = salary ; \r\n         \r\n        employee = StructNew() ; \r\n        employee[&quot;salary&quot;] = salary ;  \r\n        \/\/ employee.salary = salary ; \r\n        employees[&quot;employee#i#&quot;] = employee ; \r\n         \r\n        departments[&quot;department#i#&quot;] = StructNew() ; \r\n        departments[&quot;department#i#&quot;].boss = employee ;         \r\n    } \r\n&lt;\/cfscript&gt; \r\n \r\n&lt;cfoutput&gt; \r\n&lt;p&gt;list of employees based on the salary (text search): &lt;br&gt; \r\n1) #ArrayToList( StructSort( salaries ) )#&lt;br&gt; \r\n2) #ArrayToList( StructSort( salaries, &quot;text&quot;, &quot;ASC&quot; ) )#&lt;br&gt; \r\n3) #ArrayToList( StructSort( salaries, &quot;textnocase&quot;, &quot;ASC&quot; ) )#&lt;br&gt; \r\n4) #ArrayToList( StructSort( salaries, &quot;text&quot;, &quot;DESC&quot; ) )#&lt;br&gt; \r\n&lt;p&gt;list of employees based on the salary (numeric search): &lt;br&gt; \r\n5) #ArrayToList( StructSort( salaries, &quot;numeric&quot;, &quot;ASC&quot; ) )#&lt;br&gt; \r\n6) #ArrayToList( StructSort( salaries, &quot;numeric&quot;, &quot;DESC&quot; ) )#&lt;br&gt; \r\n&lt;p&gt;list of employees based on the salary (subfield search): &lt;br&gt; \r\n7) #ArrayToList( StructSort( employees, &quot;numeric&quot;, &quot;DESC&quot;, &quot;salary&quot; ) )#&lt;br&gt; \r\n8) #ArrayToList( StructSort( employees, &quot;text&quot;, &quot;ASC&quot;,&quot;salary&quot; ) )#&lt;br&gt; \r\n&lt;p&gt;list of departments based on the salary (sub-sub-field search): &lt;br&gt; \r\n9) #ArrayToList( StructSort( departments, &quot;text&quot;, &quot;ASC&quot;, &quot;boss.salary&quot; ) )#&lt;br&gt; \r\n&lt;\/cfoutput&gt; \r\n \r\n&lt;!--- add an invalid element and test that it throws an error ---&gt; \r\n&lt;p&gt;&lt;p&gt; \r\n&lt;cfset employees[ &quot;employee4&quot; ] = StructNew()&gt; \r\n&lt;cftry&gt; \r\n    &lt;cfset temp = StructSort( employees, &quot;text&quot;, &quot;ASC&quot;, &quot;salary&quot; )&gt; \r\n    &lt;cfoutput&gt;We have a problem - this was supposed to throw an exception!&lt;br&gt; \r\n    &lt;\/cfoutput&gt; \r\n&lt;cfcatch type=&quot;any&quot;&gt; \r\n    &lt;cfoutput&gt; \r\n        ERROR: &lt;b&gt;This error was expected!&lt;\/b&gt;&lt;br&gt; \r\n        #cfcatch.message# - #cfcatch.detail#&lt;br&gt; \r\n    &lt;\/cfoutput&gt; \r\n&lt;\/cfcatch&gt; \r\n&lt;\/cftry&gt;<br>","USAGE":"<!-- --><br>The <samp class=\"codeph\">pathToSubElement<\/samp> string does not support array notation, and only supports substructures of structures.<br>This function does not sort or change the structure.<br>","Parameter":[{"DESCRIPTION":"A ColdFusion structure with one field (an associative array).","Parameter":"base"},{"DESCRIPTION":"numeric text: case sensitive (all lowercase letters precede the first uppercase letter). Default. textnocase","Parameter":"sortType"},{"DESCRIPTION":"asc: ascending (a to z) sort order. Default. desc: descending (z to a) sort order","Parameter":"sortOrder"},{"DESCRIPTION":"String or a variable that contains one. Path to apply to each top-level key, to reach element value by which to sort. The default value is nothing (top-level entries sorted by their own values).","Parameter":"pathToSubElement"}]}