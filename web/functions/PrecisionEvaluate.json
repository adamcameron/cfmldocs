{"HISTORY":"","SYNTAX":"<!-- --><br>PrecisionEvaluate(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">string_expression1<\/i> [, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">string_expression2<\/i> , ... ])<br>","CATEGORY":"Mathematical functions, Dynamic evaluation functions","PAGENAME":"PrecisionEvaluate","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f4e.html\">Evaluate<\/a><\/samp>, <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7ff1.html\" target=\"_self\">Using Expressions and Number Signs<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Evaluates one or more string expressions, dynamically, from left to right, using BigDecimal precision arithmetic to calculate the values of arbitrary precision arithmetic expressions.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;h3&gt;PrecisionEvaluate Example&lt;\/h3&gt; \r\n&lt;cfif IsDefined(&quot;FORM.myExpression&quot;)&gt; \r\n    &lt;cftry&gt; \r\n        &lt;!--- Evaluate the expression and display the result. ---&gt; \r\n        <strong>&lt;cfset theExpression = PrecisionEvaluate(Form.myExpression)&gt;<\/strong> \r\n        &lt;cfoutput&gt; \r\n            The value of the expression #FORM.MyExpression#  \r\n            is #theExpression#.&lt;br&gt; \r\n        &lt;\/cfoutput&gt; \r\n \r\n        &lt;cfcatch type=&quot;any&quot;&gt; \r\n            &lt;cfoutput&gt;Could not evaluate the expression #Form.myExpression#. \r\n            &lt;\/cfoutput&gt; \r\n        &lt;\/cfcatch&gt; \r\n    &lt;\/cftry&gt; \r\n&lt;\/cfif&gt; \r\n \r\n&lt;cfform preservedata=&quot;yes&quot;&gt; \r\n    &lt;h3&gt;Enter a ColdFusion expression for evaluation.&lt;\/h3&gt; \r\n    &lt;p&gt;Try using some really big decimal numbers.&lt;\/p&gt; \r\n    &lt;cfinput type=&quot;text&quot; name=&quot;myExpression&quot; size=&quot;60&quot;&gt;&lt;br&gt; \r\n    &lt;br&gt; \r\n    &lt;cfinput type=&quot;submit&quot; name=&quot;submit&quot;&gt; \r\n&lt;\/cfform&gt;<br>","USAGE":"<!-- --><br>The <samp class=\"codeph\">PrecisionEvaluate<\/samp> function lets you calculate arbitrarily long decimal (BigDecimal precision) values. BigDecimal precision arithmetic accepts and generates decimal numbers of any length, and does not use exponential notation.<br>The <samp class=\"codeph\">PrecisionEvaluate<\/samp> function calculates arbitrary precision results only for addition, subtraction, multiplication, and division. If you use any of the following operations, ColdFusion performs normal integer or floating point arithmetic and does not return BigDecimal values.<br><li><p>exponentiation (^)<\/p> <\/li> \n<li><p>modulus (MOD or %)<\/p> <\/li> \n<li><p>integer division (\/)<\/p> <\/li><br>This function differs from the <samp class=\"codeph\">Evaluate<\/samp> function only in its use of BigDecimal precision arithmetic to calculate numeric values; otherwise the two functions are identical. The results of an evaluation on the left can have meaning in an expression to the right, and the function returns the result of evaluating the rightmost expression. If a string expression contains a single- or double-quotation mark, the mark must be escaped.<br>If an expression, such as 1\/3, results in an infinitely repeating decimal value, ColdFusion limits the decimal part to 20 digits.<br><span class=\"notetitle\">Note: <\/span>To increase processing efficiency, do not put the arithmetic expressions to evaluate in quotation marks (â€œ). ColdFusion compiles \n<samp class=\"codeph\">PrecisionEvaluate(a*b)<\/samp> more efficiently than it compiles \n<samp class=\"codeph\">PrecisionEvaluate(&quot;a*b&quot;)<\/samp>, although both formats produce the same results.<br>","Parameter":[{"DESCRIPTION":"Expressions to evaluate","Parameter":"string_expression1, string_expression2..."}]}