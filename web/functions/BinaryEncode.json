{"HISTORY":"<!-- --><br>ColdFusion MX 7: Added this function.<br>","SYNTAX":"<!-- --><br>BinaryEncode(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">binarydata<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">encoding<\/i>)<br>","CATEGORY":"Conversion functions, String functions","PAGENAME":"BinaryEncode","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fc5.html\">BinaryDecode<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f63.html\">CharsetEncode<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f64.html\">CharsetDecode<\/a><\/samp><br>","DESCRIPTION":"Converts binary data to a string.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>The following example reads a GIF file as binary data, converts it to a binary-encoded string, converts the binary-encoded data back to binary data, and writes the result to a file. It displays the encoded string and the image in the output file.<br>&lt;h3&gt;Binary Encoding Conversion Example&lt;\/h3&gt; \r\n \r\n&lt;!--- Do the following if the form has been submitted. ---&gt; \r\n&lt;cfif IsDefined(&quot;Form.binEncoding&quot;)&gt; \r\n \r\n    &lt;!--- Read in a binary data file. ---&gt; \r\n    &lt;cffile action=&quot;readbinary&quot; \r\n        file=&quot;C:\\images\\help.gif&quot;  \r\n        variable=&quot;binimage&quot;&gt; \r\n \r\n    &lt;!--- Convert the read data to binary encoding and back to binary data. ---&gt; \r\n    &lt;cfscript&gt; \r\n        <strong>binencode=BinaryEncode(binimage, Form.binEncoding);<\/strong> \r\n        bindecode=BinaryDecode(binencode, Form.binEncoding); \r\n    &lt;\/cfscript&gt; \r\n \r\n    &lt;!---Write the converted results to a file. ---&gt; \r\n    &lt;cffile action=&quot;write&quot; file=&quot;C:\\temp\\help.gif&quot; output=&quot;#bindecode#&quot; addnewline=&quot;No&quot; &gt; \r\n \r\n    &lt;!--- Display the results. ---&gt; \r\n    &lt;cfoutput&gt; \r\n        &lt;p&gt;&lt;b&gt;The binary encoding:&lt;\/b&gt; #Form.binEncoding#&lt;\/p&gt; \r\n         \r\n        &lt;p&gt;&lt;b&gt;The image converted into a binary-encoded string by BinaryEncode \r\n            &lt;\/b&gt;&lt;br&gt; \r\n            #binencode#&lt;\/p&gt; \r\n        &lt;p&gt;&lt;b&gt;The image as written back to a file after converting back to binary \r\n            using BinaryDecode&lt;\/b&gt;&lt;br&gt; \r\n        &lt;img src=&quot;C:\\temp\\help.gif&quot;&gt;&lt;br&gt;&lt;\/p&gt; \r\n    &lt;\/cfoutput&gt; \r\n&lt;\/cfif&gt; \r\n \r\n&lt;!--- The input form. ---&gt; \r\n&lt;form action=&quot;#CGI.SCRIPT_NAME#&quot; method=&quot;post&quot;&gt; \r\n    &lt;b&gt;Select binary encoding&lt;\/b&gt;&lt;br&gt; \r\n    &lt;select size=&quot;1&quot; name=&quot;binEncoding&quot; &gt; \r\n        &lt;option selected&gt;UU&lt;\/option&gt; \r\n        &lt;option&gt;Base64&lt;\/option&gt; \r\n        &lt;option&gt;Hex&lt;\/option&gt; \r\n    &lt;\/select&gt;&lt;br&gt; \r\n    &lt;br&gt; \r\n    &lt;input type = &quot;Submit&quot; value = &quot;convert my data&quot;&gt; \r\n&lt;\/form&gt;<br>","USAGE":"<!-- --><br>Binary objects and, in some cases, 8-bit characters, cannot be transported over many Internet protocols, such as HTTP and SMTP, and might not be supported by some database systems. By Binary encoding the data, you convert the data into a format that you can transfer over any Internet protocol or store in a database as character data. To convert the data back to a binary format, use the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fc5.html\">BinaryDecode<\/a><\/samp> function.<br>Adobe recommends that you use the <samp class=\"codeph\">BinaryEncode<\/samp> function, and not the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fc0.html\">ToBase64<\/a><\/samp><samp class=\"codeph\">(<\/samp><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">binarydata<\/i><samp class=\"codeph\">)<\/samp> function, to convert binary data to Base64 data in all new applications.<br>This function provides a superset of the functionality of the <samp class=\"codeph\">ToBase64(<\/samp><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">binarydata<\/i><samp class=\"codeph\">)<\/samp> function.<br>See the following pages for additional information on handling binary data:<br><li><p><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fa1.html\">cffile<\/a><\/samp> for loading and reading binary data<\/p> <\/li> \n<li><p><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7ca6.html\">cfwddx<\/a><\/samp> for serializing and deserializing binary data<\/p> <\/li> \n<li><p><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fac.html\">IsBinary<\/a><\/samp> for checking variables for binary format<\/p> <\/li> \n<li><p><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f38.html\">Len<\/a><\/samp> for determining the length of a binary object<\/p> <\/li><br>","Parameter":[{"DESCRIPTION":"A variable containing the binary data to encode.","Parameter":"binarydata"},{"DESCRIPTION":"A string that specifies the encoding method to use to represent the data; one of the following: Hex: use the characters 0-9 and A-F to represent the hexadecimal value of each byte; for example, 3A. UU: use the UNIX UUencode algorithm to convert the data. Base64: use the Base64 algorithm to convert the data, as specified by IETF RFC 2045, at www.ietf.org\/rfc\/rfc2045.txt.","Parameter":"encoding"}]}