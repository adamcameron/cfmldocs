{"HISTORY":"","SYNTAX":"<!-- --><br>Evaluate(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">string_expression1<\/i> [, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">string_expression2<\/i> , â€¦ ])<br>","CATEGORY":"Dynamic evaluation functions","PAGENAME":"Evaluate","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f50.html\">DE<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f4c.html\">IIf<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fd9.html\">PrecisionEvaluate<\/a><\/samp>, <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7ff1.html\" target=\"_self\">Using Expressions and Number Signs<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Evaluates one or more string expressions, dynamically, from left to right. (The results of an evaluation on the left can have meaning in an expression to the right.) Returns the result of evaluating the rightmost expression.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;!--- This example shows the use of PrecisionEvaluate and DE functions.---&gt; \r\n&lt;h3&gt;Evaluate Example&lt;\/h3&gt; \r\n&lt;cfif IsDefined(&quot;FORM.myExpression&quot;)&gt; \r\n    &lt;cftry&gt; \r\n        &lt;!--- Evaluate the expression ---&gt; \r\n        &lt;cfset theExpression = Evaluate(Form.myExpression)&gt; \r\n        &lt;cfoutput&gt; \r\n            &lt;!--- The DE function prevents the Evaluate function from evaluating \r\n                     the expression. ---&gt; \r\n            The value of the expression #Evaluate(DE(FORM.MyExpression))#  \r\n            is #theExpression#.&lt;br&gt; \r\n            &lt;!--- The following line does not use the DE function. ---&gt; \r\n            The value of the expression #FORM.MyExpression#  \r\n            is #theExpression#.&lt;br&gt; \r\n        &lt;\/cfoutput&gt; \r\n \r\n        &lt;cfcatch type=&quot;application&quot;&gt; \r\n            &lt;cfoutput&gt;Could not evaluate the expression #Form.myExpression#.&lt;br&gt; \r\n                    Make sure you enter a valid ColdFusion Expression. \r\n            &lt;\/cfoutput&gt; \r\n        &lt;\/cfcatch&gt; \r\n    &lt;\/cftry&gt; \r\n&lt;\/cfif&gt; \r\n \r\n&lt;cfform preservedata=&quot;yes&quot;&gt; \r\n    &lt;h3&gt;Enter a ColdFusion expression for evaluation&lt;\/h3&gt; \r\n    &lt;cfinput type=&quot;text&quot; name=&quot;myExpression&quot; size=&quot;60&quot;&gt;&lt;br \/&gt; \r\n    &lt;br \/&gt; \r\n    &lt;cfinput type=&quot;submit&quot; name=&quot;submit&quot;&gt; \r\n&lt;\/cfform&gt;<br>","USAGE":"<!-- --><br>String expressions can be complex. If a string expression contains a single- or double-quotation mark, the mark must be escaped.<br>This function is useful for forming one variable from multiple variables. For example, to reference a column of the query qNames with a variable, <samp class=\"codeph\">var<\/samp>, using an index value to traverse rows, you could use the following code:<br>&lt;cfset var=Evaluate(&quot;qNames.#colname#[#index#]&quot;)&gt;<br>","Parameter":[{"DESCRIPTION":"Expressions to evaluate","Parameter":"string_expression1, string_expression2..."}]}