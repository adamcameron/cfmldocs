{"HISTORY":"<!-- --><br>ColdFusion 8: Added <samp class=\"codeph\">component<\/samp> as a valid value for the <samp class=\"codeph\">ReturnType<\/samp> attribute.<br>ColdFusion MX 7: Added the <samp class=\"codeph\">xml<\/samp> value of <samp class=\"codeph\">type<\/samp> attribute.<br>ColdFusion MX: Added this tag.<br>","SYNTAX":"<!-- --><br>&lt;cfargument  \r\n    name=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">string<\/i>&quot;  \r\n    default=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">default value<\/i>&quot;  \r\n    displayname=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">descriptive name<\/i>&quot; \r\n    hint=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">extended description<\/i>&quot; \r\n    required=&quot;yes|no&quot;  \r\n    type=&quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">data type<\/i>&quot;&gt;<br>","CATEGORY":"Extensibility tags","PAGENAME":"cfargument","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7e0e.html\">cfcomponent<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f5c.html\">cffunction<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7715.html\">cfinterface<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7e0a.html\">cfinvoke<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7e09.html\">cfinvokeargument<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f6e.html\">cfobject<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7e0b.html\">cfproperty<\/a><\/samp><samp class=\"codeph\">, <\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7df7.html\">cfreturn<\/a><\/samp><br>","DESCRIPTION":"Creates a parameter definition within a component definition. Defines a function argument. Used within a cffunction tag.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;!--- This example defines a function that takes a course number parameter and returns the course description. ---&gt; \r\n&lt;cffunction name=&quot;getDescription&quot;&gt; \r\n    &lt;!--- Identify argument. ---&gt; \r\n    &lt;cfargument name=&quot;Course_Number&quot; type=&quot;numeric&quot; required=&quot;true&quot;&gt; \r\n    &lt;!--- Use the argument to get a course description from the database. ---&gt; \r\n    &lt;cfquery name=&quot;Description&quot; datasource=&quot;cfdocexamples&quot;&gt; \r\n        SELECT Descript \r\n        FROM Courses \r\n        WHERE Number = '#Course_Number#' \r\n    &lt;\/cfquery&gt; \r\n    &lt;!--- Specify the variable that the function returns. ---&gt; \r\n    &lt;cfreturn Description.Descript&gt; \r\n&lt;\/cffunction&gt;<br>","USAGE":"<!-- --><br>This tag must be in a <samp class=\"codeph\">cffunction<\/samp> tag, before any other tags in the <samp class=\"codeph\">cffunction<\/samp> tag body.<br>Arguments that are passed when a method is invoked can be accessed from the method body in the following ways:<br><li><p>With shorthand syntax: <samp class=\"codeph\">#myargument#<\/samp><\/p> <p>(This example accesses the argument <samp class=\"codeph\">myargument<\/samp>.)<\/p> <\/li> \n<li><p>Using the arguments scope as an array: <samp class=\"codeph\">#arguments[1]#<\/samp><\/p> <p>(This example accesses the first defined argument in the <samp class=\"codeph\">cffunction<\/samp>.)<\/p> <\/li> \n<li><p>Using the arguments scope as a struct: <samp class=\"codeph\">#arguments.myargument#<\/samp><\/p> <p>(This example accesses the argument <samp class=\"codeph\">myargument<\/samp> in the array.)<\/p> <\/li><br>","Attribute":[{"REQOROPT":"Required","DESCRIPTION":"String; an argument name.","default":"","Attribute":"name"},{"REQOROPT":"Optional","DESCRIPTION":"If no argument is passed, specifies a default argument value.","default":"","Attribute":"default"},{"REQOROPT":"Optional","DESCRIPTION":"Meaningful only for CFC method parameters. A value to display when using introspection to show information about the CFC.","default":"name attribute value","Attribute":"displayname"},{"REQOROPT":"Optional","DESCRIPTION":"Meaningful only for CFC method parameters. Text to display when using introspection to show information about the CFC. The hint attribute value follows the displayname attribute value in the parameter description line. Use this attribute to describe the purpose of the parameter.","default":"","Attribute":"hint"},{"REQOROPT":"Optional","DESCRIPTION":"Note: All arguments are required when invoked as a web service, irrespective of how they are defined. Specifies whether the parameter is required to execute the component method. The parameter is not required if you specify a default attribute. yes no","default":false,"Attribute":"required"},{"REQOROPT":"Optional","DESCRIPTION":"String; a type name; data type of the argument. any array binary boolean component: the argument must be a ColdFusion component. date guid: the argument must be a UUID or GUID of the form xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx where each x is a character representing a hexadecimal number (0-9A-F). numeric query string struct uuid: the argument must be a ColdFusion UUID of the form xxxxxxxx-xxxx-xxxx-xxxxxxxxxxxxxxxx where each x is a character representing a hexadecimal number (0-9A-F). variableName: a string formatted according to ColdFusion variable naming conventions. xml: XML objects and XML strings a component name: if the type attribute value is not one of the preceding items, ColdFusion treats it as the name of a ColdFusion component. When the function executes, it generates an error if the argument that is passed in is not a CFC with the specified name.","default":"any","Attribute":"type"}]}