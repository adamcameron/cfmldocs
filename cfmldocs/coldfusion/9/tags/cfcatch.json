{"HISTORY":"<!-- --><br>ColdFusion MX:<br><li><p>Changed SQLSTATE value behavior: the SQLSTATE return value in a <samp class=\"codeph\">cfcatch<\/samp> tag depends on the database driver type:<\/p> \n <ul>\n  <li><p>Type 1 (JDBC-ODBC bridge): the value is the same as in ColdFusion 5.<\/p> <\/li> \n  <li><p>Type 4 (100% Java, no native methods): the value might be different.<\/p> <\/li> \n <\/ul> <p>If your application depends on SQLSTATE values for flow control, the application might produce unexpected behavior with ColdFusion MX. <\/p> <\/li> \n<li><p>Changed the behavior of this tag when <samp class=\"codeph\">type=&quot;any&quot;<\/samp>: it is not necessary, when you include a <samp class=\"codeph\">cfcatch<\/samp> tag with <samp class=\"codeph\">type=&quot;any&quot;<\/samp>, to do so in the last <samp class=\"codeph\">cfcatch<\/samp> tag in the block, to ensure that all other tests are executed before it. ColdFusion finds the best-match <samp class=\"codeph\">cfcatch<\/samp> block. <\/p> <\/li> \n<li><p>Changed the behavior of the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7ebf.html\">cfscript<\/a><\/samp> tag: it includes <samp class=\"codeph\">try<\/samp> and <samp class=\"codeph\">catch<\/samp> statements that are equivalent to the <samp class=\"codeph\">cftry<\/samp> and <samp class=\"codeph\">cfcatch<\/samp> tags.<\/p> <\/li> \n<li><p>Changed object modification: you cannot modify the object returned by <samp class=\"codeph\">cfcatch<\/samp>. <\/p> <\/li> \n<li><p>Changed thrown exceptions: the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7d03.html\">cfcollection<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7d04.html\">cfindex<\/a><\/samp>, and <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7d02.html\">cfsearch<\/a><\/samp> tags can throw the SEARCHENGINE exception. In earlier releases, an error in processing these tags threw only an UNKNOWN exception.<\/p> <\/li><br>","SYNTAX":"<!-- --><br>&lt;cfcatch type = &quot;<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">exception type<\/i>&quot;&gt; \r\n    <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Exception processing code here<\/i>&lt;\/cfcatch&gt;<br>","CATEGORY":"Exception handling tags","PAGENAME":"cfcatch","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7ec6.html\">cftry<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7d29.html\">cferror<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-74dd.html\">cffinally<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7e24.html\">cfrethrow<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7e25.html\">cfthrow<\/a><\/samp><samp class=\"codeph\">,<\/samp><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7d4a.html\">onError<\/a><\/samp>; <samp class=\"codeph\"><a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7fc4.html\" target=\"_self\">Handling Errors<\/a><\/samp> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Used inside a cftry tag. Together, they catch and process exceptions in ColdFusion pages. Exceptions are events that disrupt the normal flow of instructions in a ColdFusion page, such as failed database operations, missing include files, and developer-specified events.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;!--- The cfcatch example that uses TagContext to display the tag stack. ---&gt; \r\n&lt;h3&gt;cftry Example&lt;\/h3&gt; \r\n&lt;!--- Open a cftry block. ---&gt; \r\n&lt;cftry&gt; \r\n    &lt;!--- Notice misspelled tablename &quot;employees&quot; as &quot;employeeas&quot;. ---&gt; \r\n    &lt;cfquery name = &quot;TestQuery&quot; dataSource = &quot;cfdocexamples&quot;&gt; \r\n        SELECT * \r\n        FROM employees \r\n    &lt;\/cfquery&gt; \r\n    &lt;!--- Other processing goes here. ---&gt; \r\n    &lt;!--- Specify the type of error for which we search. ---&gt; \r\n    &lt;cfcatch type = &quot;Database&quot;&gt; \r\n        &lt;!--- The message to display. ---&gt; \r\n        &lt;h3&gt;You've Thrown a Database &lt;b&gt;Error&lt;\/b&gt;&lt;\/h3&gt; \r\n        &lt;cfoutput&gt; \r\n            &lt;!--- The diagnostic message from ColdFusion. ---&gt; \r\n            &lt;p&gt;#cfcatch.message#&lt;\/p&gt; \r\n            &lt;p&gt;Caught an exception, type = #CFCATCH.TYPE#&lt;\/p&gt; \r\n            &lt;p&gt;The contents of the tag stack are:&lt;\/p&gt; \r\n            &lt;cfdump var=&quot;#cfcatch.tagcontext#&quot;&gt; \r\n        &lt;\/cfoutput&gt; \r\n    &lt;\/cfcatch&gt; \r\n&lt;\/cftry&gt;<br>","USAGE":"<!-- --><br>You must code at least one <samp class=\"codeph\">cfcatch<\/samp> tag within a <samp class=\"codeph\">cftry<\/samp> block. Put <samp class=\"codeph\">cfcatch<\/samp> tags at the end of a <samp class=\"codeph\">cftry<\/samp> block. ColdFusion tests <samp class=\"codeph\">cfcatch<\/samp> tags in the order in which they appear. This tag requires an end tag.<br>If <samp class=\"codeph\">type=&quot;any&quot;<\/samp>, ColdFusion catches exceptions from any CFML tag, data source, or external object. To get the exception type use code such as the following:<br>#cfcatch.type#<br>Applications can use the <samp class=\"codeph\">cfthrow<\/samp> tag to throw developer-defined exceptions. Catch these exceptions with any of these <samp class=\"codeph\">type<\/samp> options:<br><li><p><samp class=\"codeph\">&quot;<\/samp><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">custom_type<\/i><samp class=\"codeph\">&quot;<\/samp><\/p> <\/li> \n<li><p><samp class=\"codeph\">&quot;Application&quot;<\/samp><\/p> <\/li> \n<li><p><samp class=\"codeph\">&quot;Any&quot;<\/samp><\/p> <\/li><br>The <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">custom_type<\/i> type is a developer-defined type specified in a <samp class=\"codeph\">cfthrow<\/samp> tag. If you define a custom type as a series of strings concatenated by periods (for example, <samp class=\"codeph\">&quot;<\/samp><samp class=\"codeph\">MyApp.BusinessRuleException.InvalidAccount<\/samp><samp class=\"codeph\">&quot;<\/samp>), ColdFusion can catch the custom type by its character pattern. ColdFusion searches for a <samp class=\"codeph\">cfcatch<\/samp> tag in the <samp class=\"codeph\">cftry<\/samp> block with a matching exception type, starting with the most specific (the entire string), and ending with the least specific.<br>For example, you could define a type as follows:<br>&lt;cfthrow type = &quot;MyApp.BusinessRuleException.InvalidAccount&quot;&gt;<br>If you have the following <samp class=\"codeph\">cfcatch<\/samp> tag, it handles the exception:<br>&lt;cfcatch type = &quot;MyApp.BusinessRuleException.InvalidAccount&quot;&gt;<br>Otherwise, if you have the following <samp class=\"codeph\">cfcatch<\/samp> tag, it handles the exception:<br>&lt;cfcatch type = &quot;MyApp.BusinessRuleException&quot;&gt;<br>Finally, if you have the following <samp class=\"codeph\">cfcatch<\/samp> tag, it handles the exception:<br>&lt;cfcatch type = &quot;MyApp&quot;&gt;<br>You can code <samp class=\"codeph\">cfcatch<\/samp> tags in any order to catch a custom exception type.<br>If you specify <samp class=\"codeph\">type = &quot;Application&quot;<\/samp>, the <samp class=\"codeph\">cfcatch<\/samp> tag catches only custom exceptions that have the <samp class=\"codeph\">Application<\/samp> type in the <samp class=\"codeph\">cfthrow<\/samp> tag that defines them.<br>The <samp class=\"codeph\">cfinclude<\/samp>, <samp class=\"codeph\">cfmodule<\/samp>, and <samp class=\"codeph\">cferror<\/samp> tags throw an exception of <samp class=\"codeph\">type = &quot;template&quot;<\/samp>.<br>An exception that is thrown within a <samp class=\"codeph\">cfcatch<\/samp> block cannot be handled by the <samp class=\"codeph\">cftry<\/samp> block that immediately encloses the <samp class=\"codeph\">cfcatch<\/samp> tag. However, you can rethrow the currently active exception with the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7e24.html\">cfrethrow<\/a><\/samp> tag.<br>The <samp class=\"codeph\">cfcatch<\/samp> variables provide the following exception information:<br><table border=\"1\" cellpadding=\"4\" cellspacing=\"0\">\n <thead align=\"left\">\n  <tr>\n   <th valign=\"top\" width=\"NaN%\" id=\"d17e13829\"><p>cfcatch variable <\/p> <\/th> \n   <th valign=\"top\" width=\"NaN%\" id=\"d17e13832\"><p>Content<\/p> <\/th> \n  <\/tr> \n <\/thead> \n <tbody>\n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.type<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Type: Exception type, as specified in <samp class=\"codeph\">cfcatch<\/samp>.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.message<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Message: Exceptionâ€™s diagnostic message, if provided; otherwise, an empty string; in the <samp class=\"codeph\">cfcatch.message<\/samp> variable.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.detail<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Detailed message from the CFML interpreter or specified in a <samp class=\"codeph\">cfthrow<\/samp> tag. When the exception is generated by ColdFusion (and not <samp class=\"codeph\">cfthrow<\/samp>), the message can contain HTML formatting and can help determine which tag threw the exception.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.tagcontext<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>An array of tag context structures, each representing one level of the active tag context at the time of the exception.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.NativeErrorCode<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;database&quot;<\/samp>. Native error code associated with exception. Database drivers typically provide error codes to diagnose failing database operations. Default value is -1. <\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.SQLState<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;database&quot;<\/samp>. SQLState associated with exception. Database drivers typically provide error codes to help diagnose failing database operations. Default value is â€‘1. <\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.Sql<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;database&quot;<\/samp>. The SQL statement sent to the data source.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.queryError<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=&quot;database&quot;<\/samp>. The error message as reported by the database driver.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.where<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;database&quot;<\/samp>. If the query uses the <samp class=\"codeph\">cfqueryparam<\/samp> tag, query parameter name-value pairs.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.ErrNumber<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;expression&quot;<\/samp>. Internal expression error number.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.MissingFileName<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;missingInclude&quot;<\/samp>. Name of file that could not be included.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.LockName<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;lock&quot;<\/samp>. Name of affected lock (if the lock is unnamed, the value is <samp class=\"codeph\">&quot;anonymous<\/samp>&quot;).<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.LockOperation<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;lock&quot;<\/samp>. Operation that failed (Timeout, Create Mutex, or Unknown).<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.ErrorCode<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;custom&quot;<\/samp>. String error code.<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13829 \"><p><samp class=\"codeph\">cfcatch.ExtendedInfo<\/samp><\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e13832 \"><p>Applies to <samp class=\"codeph\">type<\/samp><samp class=\"codeph\">=<\/samp><samp class=\"codeph\">&quot;application&quot;<\/samp> and <samp class=\"codeph\">&quot;custom&quot;<\/samp>. Custom error message; information that the default exception handler does not display.<\/p> <\/td> \n  <\/tr> \n <\/tbody> \n<\/table><br>","Attribute":[{"REQOROPT":"Optional","DESCRIPTION":"application: catches application exceptions database: catches database exceptions template: catches ColdFusion page exceptions security: catches security exceptions object: catches object exceptions missingInclude: catches missing include file exceptions expression: catches expression exceptions lock: catches lock exceptions custom_type: catches the specified custom exception type that is defined in a cfthrow tag searchengine: catches Verity search engine exceptions any: catches all exception types","default":"Any","Attribute":"type"}]}