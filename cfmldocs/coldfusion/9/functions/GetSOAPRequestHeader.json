{"HISTORY":"<!-- --><br>ColdFusion MX 7: Added this function.<br>","SYNTAX":"<!-- --><br>GetSOAPRequestHeader(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">namespace<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">name<\/i> [, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">asXML<\/i>])<br>","CATEGORY":"XML functions","PAGENAME":"GetSOAPRequestHeader","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c84.html\">AddSOAPRequestHeader<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c83.html\">AddSOAPResponseHeader<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6ca2.html\">GetSOAPRequest<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6ca0.html\">GetSOAPResponse<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c9f.html\">GetSOAPResponseHeader<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c7e.html\">IsSOAPRequest<\/a><\/samp>; <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-69e4.html\" target=\"_self\">Basic web service concepts<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Obtains a SOAP request header. Call only from within a CFC web service function that is processing a request as a SOAP web service.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>This example creates a CFC web service that illustrates the operation of the <samp class=\"codeph\">GetSOAPRequestHeader<\/samp> function and also provides a web service that illustrates the operation of other ColdFusion SOAP functions.<br>Save the following code as headerservice.cfc in a folder called soapheaders under your web root. Test its operation, and specifically the operation of the <samp class=\"codeph\">GetSOAPRequestHeader<\/samp> function, by executing the examples that invoke this web service. For example, see the example for <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c84.html\">AddSOAPRequestHeader<\/a><\/samp>.<br>&lt;h3&gt;GetSOAPRequestHeader Example&lt;\/h3&gt; \r\n&lt;cfcomponent displayName=&quot;tester&quot; hint=&quot;Test for SOAP headers&quot;&gt; \r\n \r\n&lt;cffunction name=&quot;echo_me&quot;  \r\n    access=&quot;remote&quot; \r\n    output=&quot;false&quot;  \r\n    returntype=&quot;string&quot;  \r\n    displayname=&quot;Echo Test&quot; hint=&quot;Header test&quot;&gt; \r\n     \r\n&lt;cfargument name=&quot;in_here&quot; required=&quot;true&quot; type=&quot;string&quot;&gt; \r\n \r\n&lt;cfset isSOAP = isSOAPRequest()&gt; \r\n&lt;cfif isSOAP&gt; \r\n \r\n    &lt;!--- Get the first header as a string and as XML ---&gt; \r\n    &lt;cfset username = getSOAPRequestHeader(&quot;http:\/\/mynamespace\/&quot;, &quot;username&quot;)&gt; \r\n    &lt;cfset return = &quot;The service saw username: &quot; &amp; username&gt; \r\n    &lt;cfset xmlusername = getSOAPRequestHeader(&quot;http:\/\/mynamespace\/&quot;, &quot;username&quot;, &quot;TRUE&quot;)&gt; \r\n    &lt;cfset return = return &amp; &quot;&lt;br&gt; as XML: &quot; &amp; xmlusername&gt; \r\n     \r\n    &lt;!--- Get the second header as a string and as XML ---&gt; \r\n    &lt;cfset password = getSOAPRequestHeader(&quot;http:\/\/mynamespace\/&quot;, &quot;password&quot;)&gt; \r\n    &lt;cfset return = return &amp; &quot;The service saw password: &quot; &amp; password&gt; \r\n    &lt;cfset xmlpassword = getSOAPRequestHeader(&quot;http:\/\/mynamespace\/&quot;, &quot;password&quot;, &quot;TRUE&quot;)&gt; \r\n    &lt;cfset return = return &amp; &quot;&lt;br&gt; as XML: &quot; &amp; xmlpassword&gt; \r\n \r\n    &lt;!--- Add a header as a string ---&gt; \r\n&lt;cfset addSOAPResponseHeader(&quot;http:\/\/www.tomj.org\/myns&quot;, &quot;returnheader&quot;, &quot;AUTHORIZED VALUE&quot;, false)&gt; \r\n \r\n    &lt;!--- Add a second header using a CFML XML value ---&gt; \r\n    &lt;cfset doc = XmlNew()&gt; \r\n    &lt;cfset x = XmlElemNew(doc, &quot;http:\/\/www.tomj.org\/myns&quot;, &quot;returnheader2&quot;)&gt; \r\n    &lt;cfset x.XmlText = &quot;hey man, here I am in XML&quot;&gt; \r\n    &lt;cfsetx.XmlAttributes[&quot;xsi:type&quot;] = &quot;xsd:string&quot;&gt; \r\n    &lt;cfset tmp = addSOAPResponseHeader(&quot;ignoredNameSpace&quot;, &quot;ignoredName&quot;, x)&gt;  \r\n \r\n&lt;cfelse&gt; \r\n    &lt;!--- Add a header as a string - Must generate error!  \r\n&lt;cfset addSOAPResponseHeader(&quot;http:\/\/www.tomj.org\/myns&quot;, &quot;returnheader&quot;, &quot;AUTHORIZED VALUE&quot;, false)&gt; \r\n    ---&gt; \r\n&lt;cfset return = &quot;Not invoked as a web service&quot;&gt; \r\n&lt;\/cfif&gt; \r\n \r\n&lt;cfreturn return&gt; \r\n \r\n&lt;\/cffunction&gt; \r\n \r\n&lt;\/cfcomponent&gt;<br>","USAGE":"<!-- --><br>If you specify <samp class=\"codeph\">false<\/samp> for the <samp class=\"codeph\">asXML<\/samp> parameter, ColdFusion first attempts to retrieve the header using the data type specified in the headerâ€™s <samp class=\"codeph\">xsi:type<\/samp> attribute. If the <samp class=\"codeph\">xsi:type<\/samp> attribute is not available, ColdFusion attempts to retrieve the header as a string. If you specify <samp class=\"codeph\">true<\/samp> for the <samp class=\"codeph\">asXML<\/samp> parameter, ColdFusion retrieves the header as raw XML.<br>This function throws an error if it is invoked in a context that is not a web service request. Use the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c7e.html\">IsSOAPRequest<\/a><\/samp> function to determine whether the CFC is running as a web service.<br>","Parameter":[{"DESCRIPTION":"A String that is the namespace for the header.","Parameter":"namespace"},{"DESCRIPTION":"A String that is the name of the header.","Parameter":"name"},{"DESCRIPTION":"If true, the header is returned as a CFML XML object; if false (default), the header is returned as a Java object.","Parameter":"asXML"}]}