{"HISTORY":"ColdFusion 9: Added this function<br>","SYNTAX":"<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">GetFunctionCalledName()<\/i><br>","CATEGORY":"System functions","PAGENAME":"GetFunctionCalledName","SEEALSO":"","DESCRIPTION":"Returns the name of the variable used to call a defined function.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"The following example shows how you can use this function to return data without defining explicit setters and getters:<br>\/\/callednamedemo.cfc \r\ncomponent \r\n{ \r\n    variables.x1 = 1; \r\n    variables.y1 = 2; \r\n    function init() \r\n    { \r\n        return this; \r\n    } \r\n    function get() \r\n    {         \r\n        var name = getFunctionCalledName(); \r\n        return variables[mid(name,4,len(name)-3)]; \r\n    } \r\n    function set(value) \r\n    { \r\n        var name = getFunctionCalledName(); \r\n        variables[mid(name,4,len(name)-3)] = value; \r\n    } \r\n    this.getX1 = get; \r\n    this.getY1 = get; \r\n    this.setX1 = set; \r\n    this.setY1 = set; \r\n} \r\n&lt;!--- calledname.cfm ---&gt; \r\n&lt;cfscript&gt; \r\n    function test() \r\n    { \r\n        return getFunctionCalledName(); \r\n    } \r\n    WriteOutput(test() &amp; &quot;&lt;br&gt;&quot;); \/\/ test \r\n    a = test; \r\nWriteOutput(variables.a() &amp; &quot;&lt;br&gt;&quot;); \/\/ a \r\no = new callednamedemo(); \r\n\/\/ shows *real* methods get(), SetX1() and getY1(), etc. \r\n    writeDump(o); \r\n    o.setX1(10); \r\n    o.setY1(20); \r\n    WriteOutput(o.getX1() &amp; &quot;&lt;br&gt;&quot;); \/\/ 10 \r\n    WriteOutput(o.getY1() &amp; &quot;&lt;br&gt;&quot;) ; \/\/ 20 &lt;\/cfscript&gt;<br>","USAGE":"This function can be used to return data from CFCs by simulating getters and setters. This applies only if the CFC does not use implicit getters and setters provided by ColdFusion 9.<br>","Parameter":[]}