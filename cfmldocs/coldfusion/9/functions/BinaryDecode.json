{"HISTORY":"<!-- --><br>ColdFusion MX 7: Added this function.<br>","SYNTAX":"<!-- --><br>BinaryDecode(string, binaryencoding)<br>","CATEGORY":"Conversion functions, String functions","PAGENAME":"BinaryDecode","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f65.html\">BinaryEncode<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f63.html\">CharsetEncode<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f64.html\">CharsetDecode<\/a><\/samp><br>","DESCRIPTION":"Converts a string to a binary object. Used to convert binary data that has been encoded into string format back into binary data.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>The following example reads a GIF file as binary data, converts it to a binary-encoded string, converts the binary-encoded data back to binary data and writes the result to a file. It displays the encoded string and the image in the output file.<br>&lt;h3&gt;Binary Encoding Conversion Example&lt;\/h3&gt; \r\n \r\n&lt;!--- Do the following if the form has been submitted. ---&gt; \r\n&lt;cfif IsDefined(&quot;Form.binEncoding&quot;)&gt; \r\n \r\n    &lt;!--- Read in a binary data file. ---&gt; \r\n    &lt;cffile action=&quot;readbinary&quot; file=&quot;C:\\images\\help.gif&quot; variable=&quot;binimage&quot;&gt; \r\n \r\n    &lt;!--- Convert the read data to binary encoding and back to binary data. ---&gt; \r\n    &lt;cfscript&gt; \r\n        binencode=BinaryEncode(binimage, Form.binEncoding); \r\n        bindecode=BinaryDecode(binencode, Form.binEncoding); \r\n    &lt;\/cfscript&gt; \r\n \r\n    &lt;!---Write the converted results to a file. ---&gt; \r\n    &lt;cffile action=&quot;write&quot; file=&quot;C:\\temp\\help.gif&quot; output=&quot;#bindecode#&quot; addnewline=&quot;No&quot; &gt; \r\n \r\n    &lt;!--- Display the results. ---&gt; \r\n    &lt;cfoutput&gt; \r\n        &lt;p&gt;&lt;b&gt;The binary encoding:&lt;\/b&gt; #Form.binEncoding#&lt;\/p&gt; \r\n         \r\n        &lt;p&gt;&lt;b&gt;The image converted into a binary-encoded string by BinaryEncode \r\n            &lt;\/b&gt;&lt;br&gt; \r\n            #binencode#&lt;\/p&gt; \r\n        &lt;p&gt;&lt;b&gt;The image as written back to a file after converting back to binary \r\n            using BinaryDecode&lt;\/b&gt;&lt;br&gt; \r\n        &lt;img src=&quot;C:\\temp\\help.gif&quot;&gt;&lt;br&gt;  \r\n    &lt;\/cfoutput&gt; \r\n&lt;\/cfif&gt; \r\n \r\n&lt;!--- The input form. ---&gt; \r\n&lt;form action=&quot;#CGI.SCRIPT_NAME#&quot; method=&quot;post&quot;&gt; \r\n    &lt;b&gt;Select binary encoding&lt;\/b&gt;&lt;br&gt; \r\n    &lt;select size=&quot;1&quot; name=&quot;binEncoding&quot; &gt; \r\n        &lt;option selected&gt;UU&lt;\/option&gt; \r\n        &lt;option&gt;Base64&lt;\/option&gt; \r\n        &lt;option&gt;Hex&lt;\/option&gt; \r\n    &lt;\/select&gt;&lt;br&gt; \r\n    &lt;br&gt; \r\n    &lt;input type = &quot;Submit&quot; value = &quot;convert my data&quot;&gt; \r\n&lt;\/form&gt;<br>","USAGE":"<!-- --><br>Use this function to convert a binary-encoded string representation of binary data back to a binary object for use in your application. Binary data is often encoded as a string for transmission over many Internet protocols, such as HTTP and SMTP, or for storage in a database.<br>Adobe recommends that you use the <samp class=\"codeph\">BinaryDecode<\/samp> function, not the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f9f.html\">ToBinary<\/a><\/samp><samp class=\"codeph\">(<\/samp><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">base64data<\/i><samp class=\"codeph\">)<\/samp> function, to convert Base64-encoded data to binary data in all new applications.<br>See the following pages for additional information on handling binary data:<br><li><p><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fa1.html\">cffile<\/a><\/samp> for loading and reading binary data in files<\/p> <\/li> \n<li><p><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7ca6.html\">cfwddx<\/a><\/samp> for serializing and deserializing binary data<\/p> <\/li> \n<li><p><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fac.html\">IsBinary<\/a><\/samp> for checking variables for binary format<\/p> <\/li> \n<li><p><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f38.html\">Len<\/a><\/samp> for determining the length of a binary object<\/p> <\/li><br>","Parameter":[{"DESCRIPTION":"A string containing encoded binary data.","Parameter":"string"},{"DESCRIPTION":"A string that specifies the algorithm used to encode the original binary data into a string; must be one of the following: Hex: the characters 0-9 and A-F represent the hexadecimal value of each byte; for example, 3A. UU: data is encoded using the UNIX UUencode algorithm. Base64: data is encoded using the Base64 algorithm, as specified by IETF RFC 2045, at www.ietf.org\/rfc\/rfc2045.txt.","Parameter":"binaryencoding"}]}