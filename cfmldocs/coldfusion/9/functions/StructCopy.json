{"HISTORY":"","SYNTAX":"<!-- --><br>StructCopy(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">structure<\/i>)<br>","CATEGORY":"Structure functions","PAGENAME":"StructCopy","SEEALSO":"<!-- --><br><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-69b8.html\">Structure functions<\/a>; <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-6210.html\" target=\"_self\">Structure functions<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Copies a structure. Copies top-level keys, values, and arrays in the structure by value; copies nested structures by reference.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>&lt;!--- This code shows assignment by-value and by-reference. ---&gt; \r\n\/\/ This script creates a structure that StructCopy copies by value. &lt;br&gt;  \r\n&lt;cfscript&gt; \r\n    \/\/ Create elements. \r\n    s = StructNew(); \r\n    s.array = ArrayNew(2); \r\n \r\n    \/\/ Assign simple values to original top-level structure fields. \r\n    s.number = 99; \r\n    s.string = &quot;hello tommy&quot;; \r\n \r\n    \/\/ Assign values to original top-level array. \r\n    s.array[1][1] = &quot;one one&quot;; \r\n    s.array[1][2] = &quot;one two&quot;; \r\n&lt;\/cfscript&gt; \r\n \r\n&lt;!--- Output original structure ---&gt; \r\n&lt;hr&gt; \r\n&lt;b&gt;Original Values&lt;\/b&gt;&lt;br&gt; \r\n&lt;cfoutput&gt; \r\n    \/\/ Simple values &lt;br&gt; \r\n    s.number = #s.number#&lt;br&gt; \r\n    s.string = #s.string#&lt;br&gt; \r\n    \/\/ Array value &lt;br&gt; \r\n    s.array[1][1] = #s.array[1][1]#&lt;br&gt; \r\n    s.array[1][2] = #s.array[1][2]#&lt;br&gt; \r\n&lt;\/cfoutput&gt; \r\n \r\n\/\/ Copy this structure to a new structure. &lt;br&gt; \r\n&lt;cfset copied = StructCopy(s)&gt; \r\n \r\n&lt;cfscript&gt; \r\n\/\/ Change the values of the original structure. &lt;br&gt; \r\n    s.number = 100; \r\n    s.string = &quot;hello tommy (modified)&quot;; \r\n    s.array[1][1] = &quot;one one (modified)&quot;; \r\n    s.array[1][2] = &quot;one two (modified)&quot;; \r\n&lt;\/cfscript&gt; \r\n&lt;hr&gt; \r\n&lt;b&gt;Modified Original Values&lt;\/b&gt;&lt;br&gt; \r\n&lt;cfoutput&gt; \r\n    \/\/ Simple values &lt;br&gt; \r\n    s.number = #s.number#&lt;br&gt; \r\n    s.string = #s.string#&lt;br&gt; \r\n    \/\/ Array value &lt;br&gt; \r\n    s.array[1][1] = #s.array[1][1]#&lt;br&gt; \r\n    s.array[1][2] = #s.array[1][2]#&lt;br&gt; \r\n&lt;\/cfoutput&gt; \r\n&lt;hr&gt; \r\n&lt;b&gt;Copied structure values should be the same as the original.&lt;\/b&gt;&lt;br&gt; \r\n&lt;cfoutput&gt; \r\n    \/\/ Simple values &lt;br&gt; \r\n    copied.number = #copied.number#&lt;br&gt; \r\n    copied.string = #copied.string#&lt;br&gt; \r\n    \/\/ Array value &lt;br&gt; \r\n    copied.array[1][1] = #copied.array[1][1]#&lt;br&gt; \r\n    copied.array[1][2] = #copied.array[1][2]#&lt;br&gt; \r\n&lt;\/cfoutput&gt; \r\n \r\n\/\/ This script creates a structure that StructCopy copies by reference.  \r\n&lt;cfscript&gt; \r\n    \/\/ Create elements. \r\n    s = StructNew(); \r\n    s.nested = StructNew(); \r\n    s.nested.array = ArrayNew(2); \r\n    \/\/ Assign simple values to nested structure fields. \r\n    s.nested.number = 99; \r\n    s.nested.string = &quot;hello tommy&quot;; \r\n    \/\/ Assign values to nested array. \r\n    s.nested.array[1][1] = &quot;one one&quot;; \r\n    s.nested.array[1][2] = &quot;one two&quot;; \r\n&lt;\/cfscript&gt; \r\n \r\n&lt;!--- Output original structure ---&gt; \r\n&lt;hr&gt; \r\n&lt;b&gt;Original Values&lt;\/b&gt;&lt;br&gt; \r\n&lt;cfoutput&gt; \r\n    \/\/ Simple values &lt;br&gt; \r\n    s.nested.number = #s.nested.number#&lt;br&gt; \r\n    s.nested.string = #s.nested.string#&lt;br&gt; \r\n \r\n    \/\/ Array values &lt;br&gt; \r\n    s.nested.array[1][1] = #s.nested.array[1][1]#&lt;br&gt; \r\n    s.nested.array[1][2] = #s.nested.array[1][2]#&lt;br&gt; \r\n&lt;\/cfoutput&gt; \r\n \r\n\/\/ Use StructCopy to copy this structure to a new structure. &lt;br&gt; \r\n&lt;cfset copied = StructCopy(s)&gt; \r\n\/\/ Use Duplicate to clone this structure to a new structure. &lt;br&gt; \r\n&lt;cfset duplicated = Duplicate(s)&gt; \r\n \r\n&lt;cfscript&gt; \r\n\/\/ Change the values of the original structure. \r\n    s.nested.number = 100; \r\n    s.nested.string = &quot;hello tommy (modified)&quot;; \r\n    s.nested.array[1][1] = &quot;one one (modified)&quot;; \r\n    s.nested.array[1][2] = &quot;one two (modified)&quot;; \r\n&lt;\/cfscript&gt; \r\n&lt;hr&gt; \r\n&lt;b&gt;Modified Original Values&lt;\/b&gt;&lt;br&gt; \r\n&lt;cfoutput&gt; \r\n    \/\/ Simple values &lt;br&gt; \r\n    s.nested.number = #s.nested.number#&lt;br&gt; \r\n    s.nested.string = #s.nested.string#&lt;br&gt; \r\n \r\n    \/\/ Array value &lt;br&gt; \r\n    s.nested.array[1][1] = #s.nested.array[1][1]#&lt;br&gt; \r\n    s.nested.array[1][2] = #s.nested.array[1][2]#&lt;br&gt; \r\n&lt;\/cfoutput&gt; \r\n \r\n&lt;hr&gt; \r\n&lt;b&gt;Copied structure values should reflect changes to original.&lt;\/b&gt;&lt;br&gt; \r\n&lt;cfoutput&gt; \r\n    \/\/ Simple values &lt;br&gt; \r\n    copied.nested.number = #copied.nested.number#&lt;br&gt; \r\n    copied.nested.string = #copied.nested.string#&lt;br&gt; \r\n    \/\/ Array values &lt;br&gt; \r\n    copied.nested.array[1][1] = #copied.nested.array[1][1]#&lt;br&gt; \r\n    copied.nested.array[1][2] = #copied.nested.array[1][2]#&lt;br&gt; \r\n&lt;\/cfoutput&gt; \r\n \r\n&lt;hr&gt; \r\n&lt;b&gt;Duplicated structure values should remain unchanged.&lt;\/b&gt;&lt;br&gt; \r\n&lt;cfoutput&gt; \r\n    \/\/ Simple values &lt;br&gt; \r\n    duplicated.nested.number = #duplicated.nested.number#&lt;br&gt; \r\n    duplicated.nested.string = #duplicated.nested.string#&lt;br&gt; \r\n    \/\/ Array value &lt;br&gt; \r\n    duplicated.nested.array[1][1] = #duplicated.nested.array[1][1]#&lt;br&gt; \r\n    duplicated.nested.array[1][2] = #duplicated.nested.array[1][2]#&lt;br&gt; \r\n&lt;\/cfoutput&gt;<br>","USAGE":"<!-- --><br>The following code shows how this function copies a structure that contains a string field, a number field, and a two-dimensional array at the top-level:<br>&lt;cfoutput&gt; \r\n    &lt;cfset assignedCopy = StructNew()&gt; \r\n&lt;cfset assignedCopy.string = #struct.string#&gt; \r\n    &lt;cfset assignedCopy.number = #struct.number#&gt; \r\n    &lt;cfset assignedCopy.array = ArrayNew(2)&gt; \r\n    &lt;cfset assignedCopy.array[1][1] = #struct.array[1][1]#&gt; \r\n    &lt;cfset assignedCopy.array[1][2] = #sruct.array[1][2]#&gt; \r\n&lt;\/cfoutput&gt;<br>The following code shows how <samp class=\"codeph\">StructCopy<\/samp> copies a nested structure:<br>&lt;cfoutput&gt; \r\n&lt;cfset assignedCopy.nestedStruct = struct.nestedStruct&gt; \r\n&lt;\/cfoutput&gt;<br>To copy a structure entirely by value, use <a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f9b.html\">Duplicate<\/a>.<br>The following table shows how variables are assigned:<br><table border=\"1\" cellpadding=\"4\" cellspacing=\"0\">\n <thead align=\"left\">\n  <tr>\n   <th valign=\"top\" width=\"NaN%\" id=\"d17e166528\"><p>Variable type<\/p> <\/th> \n   <th valign=\"top\" width=\"NaN%\" id=\"d17e166531\"><p>Assigned by<\/p> <\/th> \n  <\/tr> \n <\/thead> \n <tbody>\n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166528 \"><p>structure.any_simple_value<\/p> <p>Boolean<\/p> <p>Binary<\/p> <p>Base64<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166531 \"><p>Value<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166528 \"><p>structure.array<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166531 \"><p>Value<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166528 \"><p>structure.nested_structure<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166531 \"><p>Reference<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166528 \"><p>structure.object<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166531 \"><p>Reference<\/p> <\/td> \n  <\/tr> \n  <tr>\n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166528 \"><p>structure.query<\/p> <\/td> \n   <td valign=\"top\" width=\"NaN%\" headers=\"d17e166531 \"><p>Reference<\/p> <\/td> \n  <\/tr> \n <\/tbody> \n<\/table><br>","Parameter":[{"DESCRIPTION":"Structure to copy","Parameter":"structure"}]}