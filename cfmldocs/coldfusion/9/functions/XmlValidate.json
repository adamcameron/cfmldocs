{"HISTORY":"<!-- --><br>ColdFusion MX 7: Added this function.<br>","SYNTAX":"<!-- --><br>XmlValidate(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">xmlDoc<\/i>[, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">validator<\/i>])<br>","CATEGORY":"XML functions","PAGENAME":"XmlValidate","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7697.html\">cfxml<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7fa6.html\">IsXmlDoc<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-7f67.html\">IsXML<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6e62.html\">XmlFormat<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6e91.html\">XmlNew<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6e90.html\">XmlParse<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-78e8.html\">XmlSearch<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6e8e.html\">XmlTransform<\/a><\/samp>; <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7fb3.html\" target=\"_self\">Using XML and WDDX<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Uses a Document Type Definition (DTD) or XML Schema to validate an XML text document or an XML document object.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>The following example has three parts: an XML file, an XSD Schema file, and a CFML page that parses the XML file and uses the Schema for validation. The CFML file displays the value of the returned structureâ€™s Status field and displays the returned structure. To show the results of invalid XML, modify the custorder.xml file.<br><span class=\"notetitle\">Note: <\/span>The Schema used in the following example represents the same XML structure as the DTD used in the \n<samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6e90.html\">XmlParse<\/a><\/samp> example.<br>The custorder.xml file is as follows:<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; \r\n&lt;order xmlns:xsi=&quot;http:\/\/www.w3.org\/2001\/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;http:\/\/localhost:8500\/something.xsd&quot; id=&quot;4323251&quot; &gt; \r\n    &lt;customer firstname=&quot;Philip&quot; lastname=&quot;Cramer&quot; accountNum=&quot;21&quot;\/&gt; \r\n    &lt;items&gt; \r\n        &lt;item id=&quot;43&quot;&gt; \r\n            &lt;name&gt;    Deluxe Carpenter&amp;apos;s Hammer&lt;\/name&gt; \r\n            &lt;quantity&gt;1&lt;\/quantity&gt; \r\n            &lt;unitprice&gt;15.95&lt;\/unitprice&gt; \r\n        &lt;\/item&gt; \r\n        &lt;item id=&quot;54&quot;&gt; \r\n            &lt;name&gt;    36&amp;quot; Plastic Rake&lt;\/name&gt; \r\n            &lt;quantity&gt;2&lt;\/quantity&gt; \r\n            &lt;unitprice&gt;6.95&lt;\/unitprice&gt; \r\n        &lt;\/item&gt; \r\n        &lt;item id=&quot;68&quot;&gt; \r\n            &lt;name&gt;    Standard paint thinner&lt;\/name&gt; \r\n            &lt;quantity&gt;3&lt;\/quantity&gt; \r\n            &lt;unitprice&gt;8.95&lt;\/unitprice&gt; \r\n        &lt;\/item&gt; \r\n    &lt;\/items&gt; \r\n&lt;\/order&gt;<br>The custorder.xsd file is as follows:<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; \r\n&lt;xs:schema xmlns:xs=&quot;http:\/\/www.w3.org\/2001\/XMLSchema&quot; \r\n    elementFormDefault=&quot;qualified&quot;&gt; \r\n    &lt;xs:element name=&quot;customer&quot;&gt; \r\n        &lt;xs:complexType&gt; \r\n            &lt;xs:attribute name=&quot;firstname&quot; type=&quot;xs:string&quot; use=&quot;required&quot;\/&gt; \r\n            &lt;xs:attribute name=&quot;lastname&quot; type=&quot;xs:string&quot; use=&quot;required&quot;\/&gt; \r\n            &lt;xs:attribute name=&quot;accountNum&quot; type=&quot;xs:string&quot; use=&quot;required&quot;\/&gt; \r\n        &lt;\/xs:complexType&gt; \r\n    &lt;\/xs:element&gt; \r\n    &lt;xs:element name=&quot;name&quot; type=&quot;xs:string&quot;\/&gt; \r\n    &lt;xs:element name=&quot;quantity&quot; type=&quot;xs:string&quot;\/&gt; \r\n    &lt;xs:element name=&quot;unitprice&quot; type=&quot;xs:string&quot;\/&gt; \r\n    &lt;xs:element name=&quot;item&quot;&gt; \r\n        &lt;xs:complexType&gt; \r\n            &lt;xs:sequence&gt; \r\n                &lt;xs:element ref=&quot;name&quot;\/&gt; \r\n                &lt;xs:element ref=&quot;quantity&quot;\/&gt; \r\n                &lt;xs:element ref=&quot;unitprice&quot;\/&gt; \r\n            &lt;\/xs:sequence&gt; \r\n            &lt;xs:attribute name=&quot;id&quot; type=&quot;xs:integer&quot; use=&quot;required&quot;&gt; \r\n            &lt;\/xs:attribute&gt; \r\n        &lt;\/xs:complexType&gt; \r\n    &lt;\/xs:element&gt; \r\n    &lt;xs:element name=&quot;items&quot;&gt; \r\n        &lt;xs:complexType&gt; \r\n            &lt;xs:sequence&gt; \r\n                &lt;xs:element ref=&quot;item&quot; maxOccurs=&quot;unbounded&quot;\/&gt; \r\n            &lt;\/xs:sequence&gt; \r\n        &lt;\/xs:complexType&gt; \r\n    &lt;\/xs:element&gt; \r\n    &lt;xs:element name=&quot;order&quot;&gt; \r\n        &lt;xs:complexType&gt; \r\n            &lt;xs:sequence&gt; \r\n                &lt;xs:element ref=&quot;customer&quot;\/&gt; \r\n                &lt;xs:element ref=&quot;items&quot;\/&gt; \r\n            &lt;\/xs:sequence&gt; \r\n            &lt;xs:attribute name=&quot;id&quot; type=&quot;xs:string&quot; use=&quot;required&quot;\/&gt; \r\n        &lt;\/xs:complexType&gt; \r\n    &lt;\/xs:element&gt; \r\n&lt;\/xs:schema&gt;<br>The CFML file is as follows. It uses a filename for the XML file and a URL for the Schema. The XML and URL paths must be absolute.<br>&lt;cfset \r\n<strong>myResults=XMLValidate(&quot;C:\\CFusionMX7\\wwwroot\\examples\\custorder.xml&quot;, <\/strong> \r\n&quot;http:\/\/localhost:8500\/examples\/custorder.xsd&quot;)&gt; \r\n&lt;cfoutput&gt; \r\nDid custorder.xml validate against custorder.xsd? #myResults.status#&lt;br&gt;&lt;br&gt; \r\n&lt;\/cfoutput&gt; \r\nDump of myResults structure returned by XMLValidate&lt;br&gt; \r\n&lt;cfdump var=&quot;#myResults#&quot;&gt;<br>","USAGE":"<!-- --><br>If you specify a relative URL or filename in a parameter, ColdFusion uses the directory (or, for URLs, the virtual directory) that contains the current ColdFusion page as the path root.<br>The <samp class=\"codeph\"><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">validato<\/i><\/samp><i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">r<\/i> parameter specifies a DTD or Schema to use to validate the document. If you omit the parameter, the XML document must contain one of the following:<br><li><p>A <samp class=\"codeph\">!DOCTYPE<\/samp> tag to specify the DTD or its location<\/p> <\/li> \n<li><p>An <samp class=\"codeph\">xsi:schemaLocation<\/samp> or<samp class=\"codeph\"> xsi:noNamespaceSchemaLocation<\/samp> tag to specify the Schema location <\/p> <\/li><br>If you use a <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">validator<\/i> parameter and the XML document specifies a DTD or Schema, the <samp class=\"codeph\">XmlValidate<\/samp> function uses the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">validator<\/i> parameter, and ignores the specification in the XML document.<br>If you do not use a <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">validator<\/i> parameter, and the XML document does not specify a DTD or Schema, the function returns a structure with an error message in the Errors field.<br>This function attempts to process the complete XML document, and reports all errors found during the processing. As a result, the returned structure can have a combination of Warning, Error, and FatalError fields, and each field can contain multiple error messages.<br>","Parameter":[{"DESCRIPTION":"Any of the following: A string containing an XML document. The name of an XML file. The URL of an XML file; valid protocol identifiers include http, https, ftp, and file. An XML document object, such as one generated by the XmlParse function.","Parameter":"xmlDoc"},{"DESCRIPTION":"Any of the following: A string containing a DTD or Schema. The name of a DTD or Schema file. The URL of a DTD or Schema file; valid protocol identifiers include http, https, ftp, and file.","Parameter":"validator"}]}