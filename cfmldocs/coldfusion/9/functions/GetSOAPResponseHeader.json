{"HISTORY":"<!-- --><br>ColdFusion MX 7: Added this function.<br>","SYNTAX":"<!-- --><br>GetSOAPResponseHeader(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">webservice<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">namespace<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">name<\/i> [, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">asXML<\/i>])<br>","CATEGORY":"XML functions","PAGENAME":"GetSOAPResponseHeader","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c84.html\">AddSOAPRequestHeader<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c83.html\">AddSOAPResponseHeader<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6ca2.html\">GetSOAPRequest<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6ca1.html\">GetSOAPRequestHeader<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6ca0.html\">GetSOAPResponse<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c7e.html\">IsSOAPRequest<\/a><\/samp>; <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-69e4.html\" target=\"_self\">Basic web service concepts<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Returns a SOAP response header. Call this function from within code that is invoking a web service after making a web service request.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>There are two parts to this example. The first part is the web service CFC that this function (as well as the other ColdFusion SOAP functions) uses to demonstrate its interaction with a web service. To implement the web service for this function, see the example for either the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6c83.html\">AddSOAPResponseHeader<\/a><\/samp> function or the <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6ca1.html\">GetSOAPRequestHeader<\/a><\/samp> function.<br>Execute the following example to see how the <samp class=\"codeph\">GetSOAPResponseHeader<\/samp> function operates:<br>&lt;!--- Note that you might need to modify the URL in the CreateObject function \r\nto match your server and the location of the headerservice.cfc file if it is \r\ndifferent than shown here. Likewise for the cfinvoke tag at the end ---&gt; \r\n \r\n&lt;h3&gt;GetSOAPResponseHeader Example&lt;\/h3&gt; \r\n&lt;cfscript&gt; \r\n    \/\/ Create the web service object \r\n    ws = CreateObject(&quot;webservice&quot;, &quot;http:\/\/localhost\/soapheaders\/headerservice.cfc?WSDL&quot;); \r\n     \r\n    \/\/ Set the username header as a string \r\n    addSOAPRequestHeader(ws, &quot;http:\/\/mynamespace\/&quot;, &quot;username&quot;, &quot;tom&quot;, false); \r\n     \r\n    \/\/ Set the password header as a CFML XML object \r\n    doc = XmlNew(); \r\n    doc.password = XmlElemNew(doc, &quot;http:\/\/mynamespace\/&quot;, &quot;password&quot;); \r\n    doc.password.XmlText = &quot;My Voice is my Password&quot;; \r\n    doc.password.XmlAttributes[&quot;xsi:type&quot;] = &quot;xsd:string&quot;; \r\n    addSOAPRequestHeader(ws, &quot;ignoredNameSpace&quot;, &quot;ignoredName&quot;, doc); \r\n \r\n    \/\/ Invoke the web service operation \r\n    ret = ws.echo_me(&quot;argument&quot;); \r\n     \r\n    \/\/ Get the first header as an object (string) and as XML \r\n    header = getSOAPResponseHeader(ws, &quot;http:\/\/www.tomj.org\/myns&quot;, &quot;returnheader&quot;); \r\n    XMLheader = getSOAPResponseHeader(ws, &quot;http:\/\/www.tomj.org\/myns&quot;, &quot;returnheader&quot;, true); \r\n \r\n    \/\/ Get the second header as an object (string) and as XML \r\n    header2 =getSOAPResponseHeader(ws, &quot;http:\/\/www.tomj.org\/myns&quot;, &quot;returnheader2&quot;); \r\n    XMLheader2 = getSOAPResponseHeader(ws, &quot;http:\/\/www.tomj.org\/myns&quot;, &quot;returnheader2&quot;, true); \r\n&lt;\/cfscript&gt; \r\n&lt;hr&gt; \r\n&lt;cfoutput&gt; \r\nSoap Header value: #HTMLCodeFormat(header)#&lt;br&gt; \r\nSoap Header XML value: #HTMLCodeFormat(XMLheader)#&lt;br&gt; \r\nSoap Header 2 value: #HTMLCodeFormat(header2)#&lt;br&gt; \r\nSoap Header 2 XML value: #HTMLCodeFormat(XMLheader2)#&lt;br&gt; \r\nReturn value: #HTMLCodeFormat(ret)#&lt;br&gt; \r\n&lt;\/cfoutput&gt; \r\n&lt;hr&gt; \r\n \r\n&lt;cfinvoke component=&quot;soapheaders.headerservice&quot; method=&quot;echo_me&quot; returnvariable=&quot;ret&quot; in_here=&quot;hi&quot;&gt; \r\n&lt;\/cfinvoke&gt; \r\n&lt;cfoutput&gt;Cfinvoke returned: #ret#&lt;\/cfoutput&gt;<br>","USAGE":"<!-- --><br>If you specify <samp class=\"codeph\">false<\/samp> for the <samp class=\"codeph\">asXML<\/samp> parameter, ColdFusion first attempts to retrieve the header using the data type specified in the headerâ€™s <samp class=\"codeph\">xsi:type<\/samp> attribute. If the <samp class=\"codeph\">xsi:type<\/samp> attribute is not available, ColdFusion attempts to retrieve the header as a string. If you specify <samp class=\"codeph\">true<\/samp> for the <samp class=\"codeph\">asXML<\/samp> parameter, ColdFusion retrieves the header as raw XML.<br>Used within CFML code by a consumer of a web service <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">after<\/i> it calls the web service with <samp class=\"codeph\">cfinvoke<\/samp>.<br>","Parameter":[{"DESCRIPTION":"A webservice object as returned from the cfobject tag or the CreateObject function.","Parameter":"webservice"},{"DESCRIPTION":"A String that is the namespace for the header.","Parameter":"namespace"},{"DESCRIPTION":"A String that is the name of the SOAP header.","Parameter":"name"},{"DESCRIPTION":"If True, the header is returned as a CFML XML object. If False (default), the header is returned as a Java object.","Parameter":"asXML"}]}