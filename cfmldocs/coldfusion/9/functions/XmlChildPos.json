{"HISTORY":"<!-- --><br>ColdFusion MX: Added this function.<br>","SYNTAX":"<!-- --><br>XmlChildPos(<i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">elem<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">childName<\/i>, <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">N<\/i>)<br>","CATEGORY":"XML functions","PAGENAME":"XmlChildPos","SEEALSO":"<!-- --><br><samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6e95.html\">IsXmlElem<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6e56.html\">XmlElemNew<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-78e8.html\">XmlSearch<\/a><\/samp>, <samp class=\"codeph\"><a href=\"WSc3ff6d0ea77859461172e0811cbec22c24-6e8e.html\">XmlTransform<\/a><\/samp>; <a href=\"http:\/\/help.adobe.com\/en_US\/ColdFusion\/9.0\/Developing\/WSc3ff6d0ea77859461172e0811cbec22c24-7fb3.html\" target=\"_self\">Using XML and WDDX<\/a> in the <i xmlns:fn=\"http:\/\/www.w3.org\/2005\/xpath-functions\" xmlns:fo=\"http:\/\/www.w3.org\/1999\/XSL\/Format\" xmlns:xs=\"http:\/\/www.w3.org\/2001\/XMLSchema\">Developing ColdFusion Applications<\/i><br>","DESCRIPTION":"Gets the position of a child element within an XML document object.","LICENCE":"http:\/\/help.adobe.com\/en_US\/ColdFusion\/10.0\/LegalNotices\/index.html","EXAMPLE":"<!-- --><br>The following example searches XML document element, <samp class=\"codeph\">xmlobject.employee.name[1]<\/samp>, for its second <samp class=\"codeph\">Status<\/samp> element child and uses the position in an <samp class=\"codeph\">ArrayDeleteAt<\/samp> function to remove the element:<br>&lt;!--- Create an XML document object ---&gt; \r\n&lt;cfxml variable=&quot;xmlobject&quot;&gt; \r\n&lt;employee&gt; \r\n    &lt;!-- A list of employees --&gt; \r\n    &lt;name EmpType=&quot;Regular&quot;&gt; \r\n        &lt;first&gt;Almanzo&lt;\/first&gt; \r\n        &lt;last&gt;Wilder&lt;\/last&gt; \r\n        &lt;Status&gt;Medical Absence&lt;\/Status&gt; \r\n        &lt;Status&gt;Extended Leave&lt;\/Status&gt; \r\n    &lt;\/name&gt; \r\n    &lt;name EmpType=&quot;Contract&quot;&gt; \r\n        &lt;first&gt;Laura&lt;\/first&gt; \r\n        &lt;last&gt;Ingalls&lt;\/last&gt; \r\n    &lt;\/name&gt; \r\n&lt;\/employee&gt; \r\n&lt;\/cfxml&gt; \r\n \r\n&lt;!--- Find the second Status child of the first employee.name element ---&gt; \r\n&lt;cfscript&gt; \r\nelempos=XMLChildPos(xmlobject.employee.name[1], &quot;Status&quot;, 2); \r\nArrayDeleteAt(xmlobject.employee.name[1].XmlChildren, elempos); \r\n&lt;\/cfscript&gt; \r\n \r\n&lt;!--- Dump the resulting document object to confirm the deletion ---&gt; \r\n&lt;cfdump var=&quot;#xmlobject#&quot;&gt;<br>","USAGE":"<!-- --><br>You can use the returned index in the <samp class=\"codeph\">ArrayInsertAt<\/samp> and <samp class=\"codeph\">ArrayDeleteAt<\/samp> functions to change XML document objects. If the specified child is not found, the function returns -1.<br>","Parameter":[{"DESCRIPTION":"XML element within which to search.","Parameter":"elem"},{"DESCRIPTION":"XML child element for which to search. Must be an immediate child of the elem parameter.","Parameter":"childName"},{"DESCRIPTION":"Index of XMLchild element for which to search.","Parameter":"N"}]}